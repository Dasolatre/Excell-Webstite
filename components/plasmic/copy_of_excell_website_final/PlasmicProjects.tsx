/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: b44pUm4nfW6C6Fzcbpx1wb
// Component: KbVbfLNXuuRJ

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { NavigationBar } from "@plasmicpkgs/plasmic-nav";
import { CmsQueryRepeater } from "@plasmicpkgs/plasmic-cms";
import { SliderWrapper } from "@plasmicpkgs/react-slick";
import { sliderHelpers as SliderWrapper_Helpers } from "@plasmicpkgs/react-slick";
import { CmsRowField } from "@plasmicpkgs/plasmic-cms";
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import { useScreenVariants as useScreenVariantswYGucrvFIpH5 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: wYGucrvFIpH5/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: b44pUm4nfW6C6Fzcbpx1wb/projectcss
import sty from "./PlasmicProjects.module.css"; // plasmic-import: KbVbfLNXuuRJ/css

import SunFillSvgIcon from "./icons/PlasmicIcon__SunFillSvg"; // plasmic-import: chufAfZw529U/icon
import GeoAltFillSvgIcon from "./icons/PlasmicIcon__GeoAltFillSvg"; // plasmic-import: 63gYRi4nHvpu/icon
import GeoAltFill1SvgIcon from "./icons/PlasmicIcon__GeoAltFill1Svg"; // plasmic-import: N661ASTPOBbP/icon
import EnvelopeFill1SvgIcon from "./icons/PlasmicIcon__EnvelopeFill1Svg"; // plasmic-import: K3EMqprSG4Sx/icon
import Linkedin2SvgIcon from "./icons/PlasmicIcon__Linkedin2Svg"; // plasmic-import: JSoyWAqD2o0A/icon
import Facebook2SvgIcon from "./icons/PlasmicIcon__Facebook2Svg"; // plasmic-import: 3taEzhm_7HIU/icon
import ArrowUpRightCircleFill2SvgIcon from "./icons/PlasmicIcon__ArrowUpRightCircleFill2Svg"; // plasmic-import: QV28IsMmBIyd/icon

createPlasmicElementProxy;

export type PlasmicProjects__VariantMembers = {};
export type PlasmicProjects__VariantsArgs = {};
type VariantPropType = keyof PlasmicProjects__VariantsArgs;
export const PlasmicProjects__VariantProps = new Array<VariantPropType>();

export type PlasmicProjects__ArgsType = {};
type ArgPropType = keyof PlasmicProjects__ArgsType;
export const PlasmicProjects__ArgProps = new Array<ArgPropType>();

export type PlasmicProjects__OverridesType = {
  projectPage?: Flex__<"div">;
  landingPage?: Flex__<"div">;
  heading?: Flex__<"div">;
  label?: Flex__<"label">;
  navigationBar?: Flex__<typeof NavigationBar>;
  logo7?: Flex__<"a"> & Partial<LinkProps>;
  solution4?: Flex__<"a"> & Partial<LinkProps>;
  logo8?: Flex__<"a"> & Partial<LinkProps>;
  projects?: Flex__<"div">;
  card8?: Flex__<"div">;
  sliderCarousel5?: Flex__<typeof SliderWrapper>;
  card9?: Flex__<"div">;
  sliderCarousel6?: Flex__<typeof SliderWrapper>;
  card10?: Flex__<"div">;
  sliderCarousel7?: Flex__<typeof SliderWrapper>;
  card11?: Flex__<"div">;
  sliderCarousel2?: Flex__<typeof SliderWrapper>;
  card12?: Flex__<"div">;
  sliderCarousel3?: Flex__<typeof SliderWrapper>;
  card17?: Flex__<"div">;
  sliderCarousel4?: Flex__<typeof SliderWrapper>;
  card15?: Flex__<"div">;
  sliderCarousel?: Flex__<typeof SliderWrapper>;
  footer?: Flex__<"footer">;
  section5?: Flex__<"div">;
  brandLogo3?: Flex__<"div">;
  section6?: Flex__<"div">;
  whereToFindUs3?: Flex__<"div">;
  connectWithUs4?: Flex__<"div">;
  getSolar3?: Flex__<"div">;
};

export interface DefaultProjectsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicProjects__RenderFunc(props: {
  variants: PlasmicProjects__VariantsArgs;
  args: PlasmicProjects__ArgsType;
  overrides: PlasmicProjects__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "variable",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "sliderCarousel.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,

        refName: "sliderCarousel",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "sliderCarousel2.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,

        refName: "sliderCarousel2",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "sliderCarousel3.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,

        refName: "sliderCarousel3",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "sliderCarousel4.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,

        refName: "sliderCarousel4",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "sliderCarousel5.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,

        refName: "sliderCarousel5",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "sliderCarousel6.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,

        refName: "sliderCarousel6",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "sliderCarousel7.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,

        refName: "sliderCarousel7",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantswYGucrvFIpH5()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"projectPage"}
          data-plasmic-override={overrides.projectPage}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.projectPage
          )}
        >
          <div
            data-plasmic-name={"landingPage"}
            data-plasmic-override={overrides.landingPage}
            className={classNames(projectcss.all, sty.landingPage)}
          >
            <div className={classNames(projectcss.all, sty.freeBox___3N0A)}>
              <div
                data-plasmic-name={"heading"}
                data-plasmic-override={overrides.heading}
                className={classNames(projectcss.all, sty.heading)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__uv0Gv)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___6Ef7)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__la342
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <React.Fragment>
                            {"Lighting pathways to sustainability:\n"}
                          </React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Excell Energy\u2019s Focus"}
                          </span>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>
                            {"From Luzon to Mindanao:"}
                          </React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {""}
                          </span>
                          <React.Fragment>{"\n"}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Our Solar Success Stories"}
                          </span>
                        </React.Fragment>
                      )}
                    </h1>
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__yIwt)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__yXkUi)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__rkeJi
                        )}
                      >
                        <SunFillSvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___8IwAg
                          )}
                          role={"img"}
                        />

                        <label
                          data-plasmic-name={"label"}
                          data-plasmic-override={overrides.label}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.label
                          )}
                        >
                          {"About Us"}
                        </label>
                      </Stack__>
                      <h1
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1__nOPh
                        )}
                      >
                        {"Our \u00a0Finished Projects"}
                      </h1>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__h7Pbl)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__emtUt
                        )}
                      >
                        {
                          "Explore our diverse range of solar energy projects designed to deliver sustainable and efficient solutions. \n\nOur commitment to innovation and reliability drives each project, helping businesses transition to clean energy seamlessly."
                        }
                      </div>
                      <Stack__
                        as={PlasmicLink__}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link___5S3N
                        )}
                        component={Link}
                        href={`/get-solar`}
                        platform={"nextjs"}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__bpEkF)}
                          displayHeight={"24px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"24px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/copy_of_excell_website_final/images/lightningChargeFillSvg.svg",
                            fullWidth: 24,
                            fullHeight: 24,
                            aspectRatio: 1
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wy2Rt
                          )}
                        >
                          {"Start Your Project With Us"}
                        </div>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </Stack__>
              </div>
            </div>
            <NavigationBar
              data-plasmic-name={"navigationBar"}
              data-plasmic-override={overrides.navigationBar}
              brand={
                <PlasmicLink__
                  data-plasmic-name={"logo7"}
                  data-plasmic-override={overrides.logo7}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.logo7
                  )}
                  component={Link}
                  href={"#"}
                  platform={"nextjs"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__im5YF)}
                    displayHeight={"40px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"298px"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: "/plasmic/copy_of_excell_website_final/images/layer2.svg",
                      fullWidth: 220.00169372558594,
                      fullHeight: 80.00094604492188,
                      aspectRatio: 2.75
                    }}
                  />
                </PlasmicLink__>
              }
              className={classNames("__wab_instance", sty.navigationBar)}
              closeButton={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__hnr1N)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  src={{
                    src: "/plasmic/copy_of_excell_website_final/images/xLgSvg2.svg",
                    fullWidth: 24,
                    fullHeight: 25,
                    aspectRatio: 0.96
                  }}
                />
              }
              forceOpenMenu={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? true
                  : false
              }
              itemsGap={
                hasVariant(globalVariants, "screen", "mobileOnly") ? 48 : 48
              }
              menuItems={
                <React.Fragment>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__dsHkG
                    )}
                    component={Link}
                    href={`/`}
                    platform={"nextjs"}
                  >
                    {"Home"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    data-plasmic-name={"solution4"}
                    data-plasmic-override={overrides.solution4}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.solution4
                    )}
                    component={Link}
                    href={`/solutions`}
                    platform={"nextjs"}
                  >
                    {"Solution"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__lycAp
                    )}
                    component={Link}
                    href={`/projects`}
                    platform={"nextjs"}
                  >
                    {"Projects"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    data-plasmic-name={"logo8"}
                    data-plasmic-override={overrides.logo8}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.logo8
                    )}
                    component={Link}
                    href={`/`}
                    platform={"nextjs"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__cWoUw)}
                      displayHeight={"64px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"298px"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/copy_of_excell_website_final/images/excellVerticalLogoPng.png",
                        fullWidth: 987,
                        fullHeight: 1002,
                        aspectRatio: undefined
                      }}
                    />
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__jXnE
                    )}
                    component={Link}
                    href={`/about`}
                    platform={"nextjs"}
                  >
                    {"About"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___2VHiX
                    )}
                    component={Link}
                    href={`/learn`}
                    platform={"nextjs"}
                  >
                    {"Learn"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__zVl4
                    )}
                    component={Link}
                    href={`/contact`}
                    platform={"nextjs"}
                  >
                    {"Contact Us"}
                  </PlasmicLink__>
                </React.Fragment>
              }
              openButton={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__yf5Uu)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  src={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? {
                          src: "/plasmic/copy_of_excell_website_final/images/hamburgerMenuSvg.svg",
                          fullWidth: 24,
                          fullHeight: 25,
                          aspectRatio: 0.96
                        }
                      : undefined
                  }
                  width={"32"}
                />
              }
              responsiveBreakpoint={768}
            />
          </div>
          <div
            data-plasmic-name={"projects"}
            data-plasmic-override={overrides.projects}
            className={classNames(projectcss.all, sty.projects)}
          >
            <CmsQueryRepeater
              className={classNames(
                "__wab_instance",
                sty.cmsDataFetcher__fEvGm
              )}
              desc={false}
              emptyMessage={
                <DataCtxReader__>
                  {$ctx => (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pgyLr
                      )}
                    >
                      {"No matching published entries found."}
                    </div>
                  )}
                </DataCtxReader__>
              }
              fields={[]}
              forceEmptyState={false}
              forceLoadingState={false}
              limit={1}
              loadingMessage={
                <DataCtxReader__>
                  {$ctx => (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rpKqQ
                      )}
                    >
                      {"Loading..."}
                    </div>
                  )}
                </DataCtxReader__>
              }
              noAutoRepeat={false}
              noLayout={false}
              offset={0}
              orderBy={"kilowattPeak"}
              useDraft={false}
            >
              <DataCtxReader__>
                {$ctx => (
                  <React.Fragment>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vgIoO)}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.columns__qkTcO)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___2UU0
                        )}
                      >
                        <CmsQueryRepeater
                          className={classNames(
                            "__wab_instance",
                            sty.cmsDataFetcher__w7MAp
                          )}
                          desc={false}
                          emptyMessage={
                            <DataCtxReader__>
                              {$ctx => (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__cLbeF
                                  )}
                                >
                                  {"No matching published entries found."}
                                </div>
                              )}
                            </DataCtxReader__>
                          }
                          forceEmptyState={false}
                          forceLoadingState={false}
                          limit={1}
                          loadingMessage={
                            <DataCtxReader__>
                              {$ctx => (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__cbzLg
                                  )}
                                >
                                  {"Loading..."}
                                </div>
                              )}
                            </DataCtxReader__>
                          }
                          noAutoRepeat={false}
                          noLayout={false}
                          offset={6}
                          useDraft={false}
                        >
                          <DataCtxReader__>
                            {$ctx => (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__wqnXs
                                )}
                              >
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"card8"}
                                  data-plasmic-override={overrides.card8}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.card8
                                  )}
                                >
                                  <Stack__
                                    as={"div"}
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox__cByxe
                                    )}
                                  >
                                    {(() => {
                                      const child$Props = {
                                        arrows: false,
                                        autoplay: false,
                                        beforeChange: async (
                                          ...eventArgs: any
                                        ) => {
                                          generateStateOnChangePropForCodeComponents(
                                            $state,
                                            "currentSlide",
                                            ["sliderCarousel5", "currentSlide"],
                                            SliderWrapper_Helpers
                                          ).apply(null, eventArgs);
                                        },
                                        centerMode: false,
                                        className: classNames(
                                          "__wab_instance",
                                          sty.sliderCarousel5
                                        ),
                                        dots: true,
                                        initialSlide: generateStateValueProp(
                                          $state,
                                          ["sliderCarousel5", "currentSlide"]
                                        ),
                                        pauseOnHover: true,
                                        ref: ref => {
                                          $refs["sliderCarousel5"] = ref;
                                        },
                                        sliderScopeClassName:
                                          sty["sliderCarousel5__slider"]
                                      };
                                      initializeCodeComponentStates(
                                        $state,
                                        [
                                          {
                                            name: "currentSlide",
                                            plasmicStateName:
                                              "sliderCarousel5.currentSlide"
                                          }
                                        ],
                                        [],
                                        SliderWrapper_Helpers ?? {},
                                        child$Props
                                      );

                                      return (
                                        <SliderWrapper
                                          data-plasmic-name={"sliderCarousel5"}
                                          data-plasmic-override={
                                            overrides.sliderCarousel5
                                          }
                                          {...child$Props}
                                        >
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField___9AF6M
                                            )}
                                            field={"projectImage"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__n4Dmr
                                            )}
                                            field={"projectImageAerial"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__tQwgV
                                            )}
                                            field={"projectImageCeremonial"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />
                                        </SliderWrapper>
                                      );
                                    })()}
                                    <CmsRowField
                                      className={classNames(
                                        "__wab_instance",
                                        sty.cmsEntryField__nBoIs
                                      )}
                                      field={"projectImage"}
                                      themeResetClassName={classNames(
                                        projectcss.root_reset,
                                        projectcss.root_reset_tags,
                                        projectcss.plasmic_default_styles,
                                        projectcss.plasmic_mixins,
                                        projectcss.plasmic_tokens,
                                        plasmic_antd_5_hostless_css.plasmic_tokens
                                      )}
                                    />

                                    <CmsRowField
                                      className={classNames(
                                        "__wab_instance",
                                        sty.cmsEntryField___008Fc
                                      )}
                                      field={"kilowattPeak"}
                                      themeResetClassName={classNames(
                                        projectcss.root_reset,
                                        projectcss.root_reset_tags,
                                        projectcss.plasmic_default_styles,
                                        projectcss.plasmic_mixins,
                                        projectcss.plasmic_tokens,
                                        plasmic_antd_5_hostless_css.plasmic_tokens
                                      )}
                                    />

                                    <h4
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.h4,
                                        projectcss.__wab_text,
                                        sty.h4__bSpmP
                                      )}
                                    >
                                      {"Kilowatt (kWp) Project"}
                                    </h4>
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        sty.columns__xUCfJ
                                      )}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          sty.column__lKKcY
                                        )}
                                      >
                                        <CmsRowField
                                          className={classNames(
                                            "__wab_instance",
                                            sty.cmsEntryField__cnksa
                                          )}
                                          field={"logo"}
                                          themeResetClassName={classNames(
                                            projectcss.root_reset,
                                            projectcss.root_reset_tags,
                                            projectcss.plasmic_default_styles,
                                            projectcss.plasmic_mixins,
                                            projectcss.plasmic_tokens,
                                            plasmic_antd_5_hostless_css.plasmic_tokens
                                          )}
                                        />
                                      </div>
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          sty.column__jK6IT
                                        )}
                                      >
                                        <Stack__
                                          as={"div"}
                                          hasGap={true}
                                          className={classNames(
                                            projectcss.all,
                                            sty.freeBox__d83Mu
                                          )}
                                        >
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__oKdFg
                                            )}
                                            field={"projectName"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <Stack__
                                            as={"div"}
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox__rDugr
                                            )}
                                          >
                                            <GeoAltFillSvgIcon
                                              className={classNames(
                                                projectcss.all,
                                                sty.svg__q51QC
                                              )}
                                              role={"img"}
                                            />

                                            <CmsRowField
                                              className={classNames(
                                                "__wab_instance",
                                                sty.cmsEntryField__lPowK
                                              )}
                                              field={"projectLocation"}
                                              themeResetClassName={classNames(
                                                projectcss.root_reset,
                                                projectcss.root_reset_tags,
                                                projectcss.plasmic_default_styles,
                                                projectcss.plasmic_mixins,
                                                projectcss.plasmic_tokens,
                                                plasmic_antd_5_hostless_css.plasmic_tokens
                                              )}
                                            />
                                          </Stack__>
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__ed0Cm
                                            )}
                                            field={"projectDescription"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />
                                        </Stack__>
                                      </div>
                                    </div>
                                  </Stack__>
                                </Stack__>
                              </div>
                            )}
                          </DataCtxReader__>
                        </CmsQueryRepeater>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__gzDxX
                        )}
                      >
                        <CmsQueryRepeater
                          className={classNames(
                            "__wab_instance",
                            sty.cmsDataFetcher__fFgg
                          )}
                          desc={false}
                          emptyMessage={
                            <DataCtxReader__>
                              {$ctx => (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__jkisk
                                  )}
                                >
                                  {"No matching published entries found."}
                                </div>
                              )}
                            </DataCtxReader__>
                          }
                          forceEmptyState={false}
                          forceLoadingState={false}
                          limit={1}
                          loadingMessage={
                            <DataCtxReader__>
                              {$ctx => (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__rDBvH
                                  )}
                                >
                                  {"Loading..."}
                                </div>
                              )}
                            </DataCtxReader__>
                          }
                          noAutoRepeat={false}
                          noLayout={false}
                          offset={5}
                          useDraft={false}
                        >
                          <DataCtxReader__>
                            {$ctx => (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__yIypQ
                                )}
                              >
                                <CmsRowField
                                  className={classNames(
                                    "__wab_instance",
                                    sty.cmsEntryField__pKqQ
                                  )}
                                  themeResetClassName={classNames(
                                    projectcss.root_reset,
                                    projectcss.root_reset_tags,
                                    projectcss.plasmic_default_styles,
                                    projectcss.plasmic_mixins,
                                    projectcss.plasmic_tokens,
                                    plasmic_antd_5_hostless_css.plasmic_tokens
                                  )}
                                />

                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"card9"}
                                  data-plasmic-override={overrides.card9}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.card9
                                  )}
                                >
                                  <Stack__
                                    as={"div"}
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox__zaAjV
                                    )}
                                  >
                                    {(() => {
                                      const child$Props = {
                                        arrows: false,
                                        autoplay: false,
                                        beforeChange: async (
                                          ...eventArgs: any
                                        ) => {
                                          generateStateOnChangePropForCodeComponents(
                                            $state,
                                            "currentSlide",
                                            ["sliderCarousel6", "currentSlide"],
                                            SliderWrapper_Helpers
                                          ).apply(null, eventArgs);
                                        },
                                        centerMode: false,
                                        className: classNames(
                                          "__wab_instance",
                                          sty.sliderCarousel6
                                        ),
                                        dots: true,
                                        initialSlide: generateStateValueProp(
                                          $state,
                                          ["sliderCarousel6", "currentSlide"]
                                        ),
                                        pauseOnHover: true,
                                        ref: ref => {
                                          $refs["sliderCarousel6"] = ref;
                                        },
                                        sliderScopeClassName:
                                          sty["sliderCarousel6__slider"]
                                      };
                                      initializeCodeComponentStates(
                                        $state,
                                        [
                                          {
                                            name: "currentSlide",
                                            plasmicStateName:
                                              "sliderCarousel6.currentSlide"
                                          }
                                        ],
                                        [],
                                        SliderWrapper_Helpers ?? {},
                                        child$Props
                                      );

                                      return (
                                        <SliderWrapper
                                          data-plasmic-name={"sliderCarousel6"}
                                          data-plasmic-override={
                                            overrides.sliderCarousel6
                                          }
                                          {...child$Props}
                                        >
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__rtCl8
                                            )}
                                            field={"projectImage"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__kmY92
                                            )}
                                            field={"projectImageAerial"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__h9TyJ
                                            )}
                                            field={"projectImageCeremonial"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />
                                        </SliderWrapper>
                                      );
                                    })()}
                                    <CmsRowField
                                      className={classNames(
                                        "__wab_instance",
                                        sty.cmsEntryField___6Trb
                                      )}
                                      field={"projectImage"}
                                      themeResetClassName={classNames(
                                        projectcss.root_reset,
                                        projectcss.root_reset_tags,
                                        projectcss.plasmic_default_styles,
                                        projectcss.plasmic_mixins,
                                        projectcss.plasmic_tokens,
                                        plasmic_antd_5_hostless_css.plasmic_tokens
                                      )}
                                    />

                                    <CmsRowField
                                      className={classNames(
                                        "__wab_instance",
                                        sty.cmsEntryField__rIoit
                                      )}
                                      field={"kilowattPeak"}
                                      themeResetClassName={classNames(
                                        projectcss.root_reset,
                                        projectcss.root_reset_tags,
                                        projectcss.plasmic_default_styles,
                                        projectcss.plasmic_mixins,
                                        projectcss.plasmic_tokens,
                                        plasmic_antd_5_hostless_css.plasmic_tokens
                                      )}
                                    />

                                    <h4
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.h4,
                                        projectcss.__wab_text,
                                        sty.h4__t88Xd
                                      )}
                                    >
                                      {"Kilowatt (kWp) Project"}
                                    </h4>
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        sty.columns__kegAu
                                      )}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          sty.column__fEgE5
                                        )}
                                      >
                                        <CmsRowField
                                          className={classNames(
                                            "__wab_instance",
                                            sty.cmsEntryField__a5Flz
                                          )}
                                          field={"logo"}
                                          themeResetClassName={classNames(
                                            projectcss.root_reset,
                                            projectcss.root_reset_tags,
                                            projectcss.plasmic_default_styles,
                                            projectcss.plasmic_mixins,
                                            projectcss.plasmic_tokens,
                                            plasmic_antd_5_hostless_css.plasmic_tokens
                                          )}
                                        />
                                      </div>
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          sty.column__nPPld
                                        )}
                                      >
                                        <Stack__
                                          as={"div"}
                                          hasGap={true}
                                          className={classNames(
                                            projectcss.all,
                                            sty.freeBox__j45Jl
                                          )}
                                        >
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__whBwb
                                            )}
                                            field={"projectName"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <Stack__
                                            as={"div"}
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox__o3J4E
                                            )}
                                          >
                                            <GeoAltFillSvgIcon
                                              className={classNames(
                                                projectcss.all,
                                                sty.svg__vxPp6
                                              )}
                                              role={"img"}
                                            />

                                            <CmsRowField
                                              className={classNames(
                                                "__wab_instance",
                                                sty.cmsEntryField__fSkaO
                                              )}
                                              field={"projectLocation"}
                                              themeResetClassName={classNames(
                                                projectcss.root_reset,
                                                projectcss.root_reset_tags,
                                                projectcss.plasmic_default_styles,
                                                projectcss.plasmic_mixins,
                                                projectcss.plasmic_tokens,
                                                plasmic_antd_5_hostless_css.plasmic_tokens
                                              )}
                                            />
                                          </Stack__>
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__wgjgh
                                            )}
                                            field={"projectDescription"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />
                                        </Stack__>
                                      </div>
                                    </div>
                                  </Stack__>
                                </Stack__>
                              </div>
                            )}
                          </DataCtxReader__>
                        </CmsQueryRepeater>
                      </div>
                      <div
                        className={classNames(projectcss.all, sty.column__wRmg)}
                      >
                        <CmsQueryRepeater
                          className={classNames(
                            "__wab_instance",
                            sty.cmsDataFetcher__cpDg
                          )}
                          desc={false}
                          emptyMessage={
                            <DataCtxReader__>
                              {$ctx => (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__yf87F
                                  )}
                                >
                                  {"No matching published entries found."}
                                </div>
                              )}
                            </DataCtxReader__>
                          }
                          forceEmptyState={false}
                          forceLoadingState={false}
                          limit={1}
                          loadingMessage={
                            <DataCtxReader__>
                              {$ctx => (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__zg83P
                                  )}
                                >
                                  {"Loading..."}
                                </div>
                              )}
                            </DataCtxReader__>
                          }
                          noAutoRepeat={false}
                          noLayout={false}
                          offset={4}
                          useDraft={false}
                        >
                          <DataCtxReader__>
                            {$ctx => (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__ovTtu
                                )}
                              >
                                <CmsRowField
                                  className={classNames(
                                    "__wab_instance",
                                    sty.cmsEntryField__nsde6
                                  )}
                                  themeResetClassName={classNames(
                                    projectcss.root_reset,
                                    projectcss.root_reset_tags,
                                    projectcss.plasmic_default_styles,
                                    projectcss.plasmic_mixins,
                                    projectcss.plasmic_tokens,
                                    plasmic_antd_5_hostless_css.plasmic_tokens
                                  )}
                                />

                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"card10"}
                                  data-plasmic-override={overrides.card10}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.card10
                                  )}
                                >
                                  <Stack__
                                    as={"div"}
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox___0Ph3P
                                    )}
                                  >
                                    {(() => {
                                      const child$Props = {
                                        arrows: false,
                                        autoplay: false,
                                        beforeChange: async (
                                          ...eventArgs: any
                                        ) => {
                                          generateStateOnChangePropForCodeComponents(
                                            $state,
                                            "currentSlide",
                                            ["sliderCarousel7", "currentSlide"],
                                            SliderWrapper_Helpers
                                          ).apply(null, eventArgs);
                                        },
                                        centerMode: false,
                                        className: classNames(
                                          "__wab_instance",
                                          sty.sliderCarousel7
                                        ),
                                        dots: true,
                                        initialSlide: generateStateValueProp(
                                          $state,
                                          ["sliderCarousel7", "currentSlide"]
                                        ),
                                        pauseOnHover: true,
                                        ref: ref => {
                                          $refs["sliderCarousel7"] = ref;
                                        },
                                        sliderScopeClassName:
                                          sty["sliderCarousel7__slider"]
                                      };
                                      initializeCodeComponentStates(
                                        $state,
                                        [
                                          {
                                            name: "currentSlide",
                                            plasmicStateName:
                                              "sliderCarousel7.currentSlide"
                                          }
                                        ],
                                        [],
                                        SliderWrapper_Helpers ?? {},
                                        child$Props
                                      );

                                      return (
                                        <SliderWrapper
                                          data-plasmic-name={"sliderCarousel7"}
                                          data-plasmic-override={
                                            overrides.sliderCarousel7
                                          }
                                          {...child$Props}
                                        >
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__ocS9S
                                            )}
                                            field={"projectImage"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField___977Ps
                                            )}
                                            field={"projectImageAerial"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__t2LwD
                                            )}
                                            field={"projectImageCeremonial"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />
                                        </SliderWrapper>
                                      );
                                    })()}
                                    <CmsRowField
                                      className={classNames(
                                        "__wab_instance",
                                        sty.cmsEntryField__xqwWy
                                      )}
                                      field={"projectImage"}
                                      themeResetClassName={classNames(
                                        projectcss.root_reset,
                                        projectcss.root_reset_tags,
                                        projectcss.plasmic_default_styles,
                                        projectcss.plasmic_mixins,
                                        projectcss.plasmic_tokens,
                                        plasmic_antd_5_hostless_css.plasmic_tokens
                                      )}
                                    />

                                    <CmsRowField
                                      className={classNames(
                                        "__wab_instance",
                                        sty.cmsEntryField___3Rlhd
                                      )}
                                      field={"kilowattPeak"}
                                      themeResetClassName={classNames(
                                        projectcss.root_reset,
                                        projectcss.root_reset_tags,
                                        projectcss.plasmic_default_styles,
                                        projectcss.plasmic_mixins,
                                        projectcss.plasmic_tokens,
                                        plasmic_antd_5_hostless_css.plasmic_tokens
                                      )}
                                    />

                                    <h4
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.h4,
                                        projectcss.__wab_text,
                                        sty.h4___14HjO
                                      )}
                                    >
                                      {"Kilowatt (kWp) Project"}
                                    </h4>
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        sty.columns__uVdqv
                                      )}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          sty.column__jmP
                                        )}
                                      >
                                        <CmsRowField
                                          className={classNames(
                                            "__wab_instance",
                                            sty.cmsEntryField__smYk
                                          )}
                                          field={"logo"}
                                          themeResetClassName={classNames(
                                            projectcss.root_reset,
                                            projectcss.root_reset_tags,
                                            projectcss.plasmic_default_styles,
                                            projectcss.plasmic_mixins,
                                            projectcss.plasmic_tokens,
                                            plasmic_antd_5_hostless_css.plasmic_tokens
                                          )}
                                        />
                                      </div>
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          sty.column___3CiiF
                                        )}
                                      >
                                        <Stack__
                                          as={"div"}
                                          hasGap={true}
                                          className={classNames(
                                            projectcss.all,
                                            sty.freeBox__dZhWi
                                          )}
                                        >
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__xyXuy
                                            )}
                                            field={"projectName"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <Stack__
                                            as={"div"}
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox__wHp74
                                            )}
                                          >
                                            <GeoAltFillSvgIcon
                                              className={classNames(
                                                projectcss.all,
                                                sty.svg__fvRyo
                                              )}
                                              role={"img"}
                                            />

                                            <CmsRowField
                                              className={classNames(
                                                "__wab_instance",
                                                sty.cmsEntryField__me043
                                              )}
                                              field={"projectLocation"}
                                              themeResetClassName={classNames(
                                                projectcss.root_reset,
                                                projectcss.root_reset_tags,
                                                projectcss.plasmic_default_styles,
                                                projectcss.plasmic_mixins,
                                                projectcss.plasmic_tokens,
                                                plasmic_antd_5_hostless_css.plasmic_tokens
                                              )}
                                            />
                                          </Stack__>
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__oz8Ol
                                            )}
                                            field={"projectDescription"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />
                                        </Stack__>
                                      </div>
                                    </div>
                                  </Stack__>
                                </Stack__>
                              </div>
                            )}
                          </DataCtxReader__>
                        </CmsQueryRepeater>
                      </div>
                    </Stack__>
                  </React.Fragment>
                )}
              </DataCtxReader__>
            </CmsQueryRepeater>
            <CmsQueryRepeater
              className={classNames(
                "__wab_instance",
                sty.cmsDataFetcher__q8D2Q
              )}
              desc={false}
              emptyMessage={
                <DataCtxReader__>
                  {$ctx => (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aNlKu
                      )}
                    >
                      {"No matching published entries found."}
                    </div>
                  )}
                </DataCtxReader__>
              }
              fields={[]}
              forceEmptyState={false}
              forceLoadingState={false}
              limit={1}
              loadingMessage={
                <DataCtxReader__>
                  {$ctx => (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sFHe4
                      )}
                    >
                      {"Loading..."}
                    </div>
                  )}
                </DataCtxReader__>
              }
              noAutoRepeat={false}
              noLayout={false}
              offset={0}
              orderBy={"kilowattPeak"}
              useDraft={false}
            >
              <DataCtxReader__>
                {$ctx => (
                  <React.Fragment>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ao5Wa)}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.columns__tsa7J)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__jhtza
                        )}
                      >
                        <CmsQueryRepeater
                          className={classNames(
                            "__wab_instance",
                            sty.cmsDataFetcher__tpbBy
                          )}
                          desc={false}
                          emptyMessage={
                            <DataCtxReader__>
                              {$ctx => (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__ynytQ
                                  )}
                                >
                                  {"No matching published entries found."}
                                </div>
                              )}
                            </DataCtxReader__>
                          }
                          forceEmptyState={false}
                          forceLoadingState={false}
                          limit={1}
                          loadingMessage={
                            <DataCtxReader__>
                              {$ctx => (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___6Lar
                                  )}
                                >
                                  {"Loading..."}
                                </div>
                              )}
                            </DataCtxReader__>
                          }
                          noAutoRepeat={false}
                          noLayout={false}
                          offset={3}
                          useDraft={false}
                        >
                          <DataCtxReader__>
                            {$ctx => (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox___6ZA2K
                                )}
                              >
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"card11"}
                                  data-plasmic-override={overrides.card11}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.card11
                                  )}
                                >
                                  <Stack__
                                    as={"div"}
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox__cJsp
                                    )}
                                  >
                                    {(() => {
                                      const child$Props = {
                                        arrows: false,
                                        autoplay: false,
                                        beforeChange: async (
                                          ...eventArgs: any
                                        ) => {
                                          generateStateOnChangePropForCodeComponents(
                                            $state,
                                            "currentSlide",
                                            ["sliderCarousel2", "currentSlide"],
                                            SliderWrapper_Helpers
                                          ).apply(null, eventArgs);
                                        },
                                        centerMode: false,
                                        className: classNames(
                                          "__wab_instance",
                                          sty.sliderCarousel2
                                        ),
                                        dots: true,
                                        initialSlide: generateStateValueProp(
                                          $state,
                                          ["sliderCarousel2", "currentSlide"]
                                        ),
                                        pauseOnHover: true,
                                        ref: ref => {
                                          $refs["sliderCarousel2"] = ref;
                                        },
                                        sliderScopeClassName:
                                          sty["sliderCarousel2__slider"]
                                      };
                                      initializeCodeComponentStates(
                                        $state,
                                        [
                                          {
                                            name: "currentSlide",
                                            plasmicStateName:
                                              "sliderCarousel2.currentSlide"
                                          }
                                        ],
                                        [],
                                        SliderWrapper_Helpers ?? {},
                                        child$Props
                                      );

                                      return (
                                        <SliderWrapper
                                          data-plasmic-name={"sliderCarousel2"}
                                          data-plasmic-override={
                                            overrides.sliderCarousel2
                                          }
                                          {...child$Props}
                                        >
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__lvDHj
                                            )}
                                            field={"projectImage"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__lemT5
                                            )}
                                            field={"projectImageAerial"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__tvelJ
                                            )}
                                            field={"projectImageCeremonial"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />
                                        </SliderWrapper>
                                      );
                                    })()}
                                    <CmsRowField
                                      className={classNames(
                                        "__wab_instance",
                                        sty.cmsEntryField__kvMi9
                                      )}
                                      field={"projectImage"}
                                      themeResetClassName={classNames(
                                        projectcss.root_reset,
                                        projectcss.root_reset_tags,
                                        projectcss.plasmic_default_styles,
                                        projectcss.plasmic_mixins,
                                        projectcss.plasmic_tokens,
                                        plasmic_antd_5_hostless_css.plasmic_tokens
                                      )}
                                    />

                                    <CmsRowField
                                      className={classNames(
                                        "__wab_instance",
                                        sty.cmsEntryField__pVjc
                                      )}
                                      field={"kilowattPeak"}
                                      themeResetClassName={classNames(
                                        projectcss.root_reset,
                                        projectcss.root_reset_tags,
                                        projectcss.plasmic_default_styles,
                                        projectcss.plasmic_mixins,
                                        projectcss.plasmic_tokens,
                                        plasmic_antd_5_hostless_css.plasmic_tokens
                                      )}
                                    />

                                    <h4
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.h4,
                                        projectcss.__wab_text,
                                        sty.h4__mxwz7
                                      )}
                                    >
                                      {"Kilowatt (kWp) Project"}
                                    </h4>
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        sty.columns__v4On
                                      )}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          sty.column__zADk4
                                        )}
                                      >
                                        <CmsRowField
                                          className={classNames(
                                            "__wab_instance",
                                            sty.cmsEntryField__aeHfl
                                          )}
                                          field={"logo"}
                                          themeResetClassName={classNames(
                                            projectcss.root_reset,
                                            projectcss.root_reset_tags,
                                            projectcss.plasmic_default_styles,
                                            projectcss.plasmic_mixins,
                                            projectcss.plasmic_tokens,
                                            plasmic_antd_5_hostless_css.plasmic_tokens
                                          )}
                                        />
                                      </div>
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          sty.column__gJ0RM
                                        )}
                                      >
                                        <Stack__
                                          as={"div"}
                                          hasGap={true}
                                          className={classNames(
                                            projectcss.all,
                                            sty.freeBox___7Nw9V
                                          )}
                                        >
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__hkAlu
                                            )}
                                            field={"projectName"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <Stack__
                                            as={"div"}
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox__vYzIc
                                            )}
                                          >
                                            <CmsRowField
                                              className={classNames(
                                                "__wab_instance",
                                                sty.cmsEntryField__s6E1M
                                              )}
                                              field={"projectLocation"}
                                              themeResetClassName={classNames(
                                                projectcss.root_reset,
                                                projectcss.root_reset_tags,
                                                projectcss.plasmic_default_styles,
                                                projectcss.plasmic_mixins,
                                                projectcss.plasmic_tokens,
                                                plasmic_antd_5_hostless_css.plasmic_tokens
                                              )}
                                            />
                                          </Stack__>
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__tUe6U
                                            )}
                                            field={"projectDescription"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />
                                        </Stack__>
                                      </div>
                                    </div>
                                  </Stack__>
                                </Stack__>
                              </div>
                            )}
                          </DataCtxReader__>
                        </CmsQueryRepeater>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__z5ZiD
                        )}
                      >
                        <CmsQueryRepeater
                          className={classNames(
                            "__wab_instance",
                            sty.cmsDataFetcher__iiuOm
                          )}
                          desc={false}
                          emptyMessage={
                            <DataCtxReader__>
                              {$ctx => (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___1BiRo
                                  )}
                                >
                                  {"No matching published entries found."}
                                </div>
                              )}
                            </DataCtxReader__>
                          }
                          forceEmptyState={false}
                          forceLoadingState={false}
                          limit={1}
                          loadingMessage={
                            <DataCtxReader__>
                              {$ctx => (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__vUuat
                                  )}
                                >
                                  {"Loading..."}
                                </div>
                              )}
                            </DataCtxReader__>
                          }
                          noAutoRepeat={false}
                          noLayout={false}
                          offset={2}
                          useDraft={false}
                        >
                          <DataCtxReader__>
                            {$ctx => (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__o9VhX
                                )}
                              >
                                <CmsRowField
                                  className={classNames(
                                    "__wab_instance",
                                    sty.cmsEntryField___4F3I
                                  )}
                                  themeResetClassName={classNames(
                                    projectcss.root_reset,
                                    projectcss.root_reset_tags,
                                    projectcss.plasmic_default_styles,
                                    projectcss.plasmic_mixins,
                                    projectcss.plasmic_tokens,
                                    plasmic_antd_5_hostless_css.plasmic_tokens
                                  )}
                                />

                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"card12"}
                                  data-plasmic-override={overrides.card12}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.card12
                                  )}
                                >
                                  <Stack__
                                    as={"div"}
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox___0YutU
                                    )}
                                  >
                                    {(() => {
                                      const child$Props = {
                                        arrows: false,
                                        autoplay: false,
                                        beforeChange: async (
                                          ...eventArgs: any
                                        ) => {
                                          generateStateOnChangePropForCodeComponents(
                                            $state,
                                            "currentSlide",
                                            ["sliderCarousel3", "currentSlide"],
                                            SliderWrapper_Helpers
                                          ).apply(null, eventArgs);
                                        },
                                        centerMode: false,
                                        className: classNames(
                                          "__wab_instance",
                                          sty.sliderCarousel3
                                        ),
                                        dots: true,
                                        initialSlide: generateStateValueProp(
                                          $state,
                                          ["sliderCarousel3", "currentSlide"]
                                        ),
                                        pauseOnHover: true,
                                        ref: ref => {
                                          $refs["sliderCarousel3"] = ref;
                                        },
                                        sliderScopeClassName:
                                          sty["sliderCarousel3__slider"]
                                      };
                                      initializeCodeComponentStates(
                                        $state,
                                        [
                                          {
                                            name: "currentSlide",
                                            plasmicStateName:
                                              "sliderCarousel3.currentSlide"
                                          }
                                        ],
                                        [],
                                        SliderWrapper_Helpers ?? {},
                                        child$Props
                                      );

                                      return (
                                        <SliderWrapper
                                          data-plasmic-name={"sliderCarousel3"}
                                          data-plasmic-override={
                                            overrides.sliderCarousel3
                                          }
                                          {...child$Props}
                                        >
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__v5FL1
                                            )}
                                            field={"projectImage"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField___38SMd
                                            )}
                                            field={"projectImageAerial"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__s4DB
                                            )}
                                            field={"projectImageCeremonial"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />
                                        </SliderWrapper>
                                      );
                                    })()}
                                    <CmsRowField
                                      className={classNames(
                                        "__wab_instance",
                                        sty.cmsEntryField__yxDrn
                                      )}
                                      field={"projectImage"}
                                      themeResetClassName={classNames(
                                        projectcss.root_reset,
                                        projectcss.root_reset_tags,
                                        projectcss.plasmic_default_styles,
                                        projectcss.plasmic_mixins,
                                        projectcss.plasmic_tokens,
                                        plasmic_antd_5_hostless_css.plasmic_tokens
                                      )}
                                    />

                                    <CmsRowField
                                      className={classNames(
                                        "__wab_instance",
                                        sty.cmsEntryField__eyUgN
                                      )}
                                      field={"kilowattPeak"}
                                      themeResetClassName={classNames(
                                        projectcss.root_reset,
                                        projectcss.root_reset_tags,
                                        projectcss.plasmic_default_styles,
                                        projectcss.plasmic_mixins,
                                        projectcss.plasmic_tokens,
                                        plasmic_antd_5_hostless_css.plasmic_tokens
                                      )}
                                    />

                                    <h4
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.h4,
                                        projectcss.__wab_text,
                                        sty.h4__o6R2C
                                      )}
                                    >
                                      {"Kilowatt (kWp) Project"}
                                    </h4>
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        sty.columns__ea5Nq
                                      )}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          sty.column__zbAxm
                                        )}
                                      >
                                        <CmsRowField
                                          className={classNames(
                                            "__wab_instance",
                                            sty.cmsEntryField__a76Yi
                                          )}
                                          field={"logo"}
                                          themeResetClassName={classNames(
                                            projectcss.root_reset,
                                            projectcss.root_reset_tags,
                                            projectcss.plasmic_default_styles,
                                            projectcss.plasmic_mixins,
                                            projectcss.plasmic_tokens,
                                            plasmic_antd_5_hostless_css.plasmic_tokens
                                          )}
                                        />
                                      </div>
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          sty.column__dSdMo
                                        )}
                                      >
                                        <Stack__
                                          as={"div"}
                                          hasGap={true}
                                          className={classNames(
                                            projectcss.all,
                                            sty.freeBox__hhbu
                                          )}
                                        >
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__pqIab
                                            )}
                                            field={"projectName"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <Stack__
                                            as={"div"}
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox__avEPz
                                            )}
                                          >
                                            <CmsRowField
                                              className={classNames(
                                                "__wab_instance",
                                                sty.cmsEntryField__u8Kbr
                                              )}
                                              field={"projectLocation"}
                                              themeResetClassName={classNames(
                                                projectcss.root_reset,
                                                projectcss.root_reset_tags,
                                                projectcss.plasmic_default_styles,
                                                projectcss.plasmic_mixins,
                                                projectcss.plasmic_tokens,
                                                plasmic_antd_5_hostless_css.plasmic_tokens
                                              )}
                                            />
                                          </Stack__>
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__hlpsQ
                                            )}
                                            field={"projectDescription"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />
                                        </Stack__>
                                      </div>
                                    </div>
                                  </Stack__>
                                </Stack__>
                              </div>
                            )}
                          </DataCtxReader__>
                        </CmsQueryRepeater>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__cDnhh
                        )}
                      >
                        <CmsQueryRepeater
                          className={classNames(
                            "__wab_instance",
                            sty.cmsDataFetcher__riXCs
                          )}
                          desc={false}
                          emptyMessage={
                            <DataCtxReader__>
                              {$ctx => (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__o0Afu
                                  )}
                                >
                                  {"No matching published entries found."}
                                </div>
                              )}
                            </DataCtxReader__>
                          }
                          forceEmptyState={false}
                          forceLoadingState={false}
                          limit={1}
                          loadingMessage={
                            <DataCtxReader__>
                              {$ctx => (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__dvyg2
                                  )}
                                >
                                  {"Loading..."}
                                </div>
                              )}
                            </DataCtxReader__>
                          }
                          noAutoRepeat={false}
                          noLayout={false}
                          offset={1}
                          useDraft={false}
                        >
                          <DataCtxReader__>
                            {$ctx => (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__zbccO
                                )}
                              >
                                <CmsRowField
                                  className={classNames(
                                    "__wab_instance",
                                    sty.cmsEntryField__jinZs
                                  )}
                                  themeResetClassName={classNames(
                                    projectcss.root_reset,
                                    projectcss.root_reset_tags,
                                    projectcss.plasmic_default_styles,
                                    projectcss.plasmic_mixins,
                                    projectcss.plasmic_tokens,
                                    plasmic_antd_5_hostless_css.plasmic_tokens
                                  )}
                                />

                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"card17"}
                                  data-plasmic-override={overrides.card17}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.card17
                                  )}
                                >
                                  <Stack__
                                    as={"div"}
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox__ibZg4
                                    )}
                                  >
                                    {(() => {
                                      const child$Props = {
                                        arrows: false,
                                        autoplay: false,
                                        beforeChange: async (
                                          ...eventArgs: any
                                        ) => {
                                          generateStateOnChangePropForCodeComponents(
                                            $state,
                                            "currentSlide",
                                            ["sliderCarousel4", "currentSlide"],
                                            SliderWrapper_Helpers
                                          ).apply(null, eventArgs);
                                        },
                                        centerMode: false,
                                        className: classNames(
                                          "__wab_instance",
                                          sty.sliderCarousel4
                                        ),
                                        dots: true,
                                        initialSlide: generateStateValueProp(
                                          $state,
                                          ["sliderCarousel4", "currentSlide"]
                                        ),
                                        pauseOnHover: true,
                                        ref: ref => {
                                          $refs["sliderCarousel4"] = ref;
                                        },
                                        sliderScopeClassName:
                                          sty["sliderCarousel4__slider"]
                                      };
                                      initializeCodeComponentStates(
                                        $state,
                                        [
                                          {
                                            name: "currentSlide",
                                            plasmicStateName:
                                              "sliderCarousel4.currentSlide"
                                          }
                                        ],
                                        [],
                                        SliderWrapper_Helpers ?? {},
                                        child$Props
                                      );

                                      return (
                                        <SliderWrapper
                                          data-plasmic-name={"sliderCarousel4"}
                                          data-plasmic-override={
                                            overrides.sliderCarousel4
                                          }
                                          {...child$Props}
                                        >
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__kPhpa
                                            )}
                                            field={"projectImage"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__hmH6
                                            )}
                                            field={"projectImageAerial"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__qv6Em
                                            )}
                                            field={"projectImageCeremonial"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />
                                        </SliderWrapper>
                                      );
                                    })()}
                                    <CmsRowField
                                      className={classNames(
                                        "__wab_instance",
                                        sty.cmsEntryField__ye7Je
                                      )}
                                      field={"projectImage"}
                                      themeResetClassName={classNames(
                                        projectcss.root_reset,
                                        projectcss.root_reset_tags,
                                        projectcss.plasmic_default_styles,
                                        projectcss.plasmic_mixins,
                                        projectcss.plasmic_tokens,
                                        plasmic_antd_5_hostless_css.plasmic_tokens
                                      )}
                                    />

                                    <CmsRowField
                                      className={classNames(
                                        "__wab_instance",
                                        sty.cmsEntryField__cuAlg
                                      )}
                                      field={"kilowattPeak"}
                                      themeResetClassName={classNames(
                                        projectcss.root_reset,
                                        projectcss.root_reset_tags,
                                        projectcss.plasmic_default_styles,
                                        projectcss.plasmic_mixins,
                                        projectcss.plasmic_tokens,
                                        plasmic_antd_5_hostless_css.plasmic_tokens
                                      )}
                                    />

                                    <h4
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.h4,
                                        projectcss.__wab_text,
                                        sty.h4__iSvPp
                                      )}
                                    >
                                      {"Kilowatt (kWp) Project"}
                                    </h4>
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        sty.columns__qnc61
                                      )}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          sty.column__iDxyy
                                        )}
                                      >
                                        <CmsRowField
                                          className={classNames(
                                            "__wab_instance",
                                            sty.cmsEntryField__xdOgk
                                          )}
                                          field={"logo"}
                                          themeResetClassName={classNames(
                                            projectcss.root_reset,
                                            projectcss.root_reset_tags,
                                            projectcss.plasmic_default_styles,
                                            projectcss.plasmic_mixins,
                                            projectcss.plasmic_tokens,
                                            plasmic_antd_5_hostless_css.plasmic_tokens
                                          )}
                                        />
                                      </div>
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          sty.column__ytII
                                        )}
                                      >
                                        <Stack__
                                          as={"div"}
                                          hasGap={true}
                                          className={classNames(
                                            projectcss.all,
                                            sty.freeBox__dYaNp
                                          )}
                                        >
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__uWt6M
                                            )}
                                            field={"projectName"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <Stack__
                                            as={"div"}
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox__eutqy
                                            )}
                                          >
                                            <CmsRowField
                                              className={classNames(
                                                "__wab_instance",
                                                sty.cmsEntryField__mgc3J
                                              )}
                                              field={"projectLocation"}
                                              themeResetClassName={classNames(
                                                projectcss.root_reset,
                                                projectcss.root_reset_tags,
                                                projectcss.plasmic_default_styles,
                                                projectcss.plasmic_mixins,
                                                projectcss.plasmic_tokens,
                                                plasmic_antd_5_hostless_css.plasmic_tokens
                                              )}
                                            />
                                          </Stack__>
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField___1SYqn
                                            )}
                                            field={"projectDescription"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />
                                        </Stack__>
                                      </div>
                                    </div>
                                  </Stack__>
                                </Stack__>
                              </div>
                            )}
                          </DataCtxReader__>
                        </CmsQueryRepeater>
                      </div>
                    </Stack__>
                  </React.Fragment>
                )}
              </DataCtxReader__>
            </CmsQueryRepeater>
            <CmsQueryRepeater
              className={classNames(
                "__wab_instance",
                sty.cmsDataFetcher__m5Rz3
              )}
              desc={false}
              emptyMessage={
                <DataCtxReader__>
                  {$ctx => (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1KTiR
                      )}
                    >
                      {"No matching published entries found."}
                    </div>
                  )}
                </DataCtxReader__>
              }
              fields={[]}
              forceEmptyState={false}
              forceLoadingState={false}
              limit={1}
              loadingMessage={
                <DataCtxReader__>
                  {$ctx => (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__e2UoE
                      )}
                    >
                      {"Loading..."}
                    </div>
                  )}
                </DataCtxReader__>
              }
              noAutoRepeat={false}
              noLayout={false}
              offset={0}
              orderBy={"kilowattPeak"}
              useDraft={false}
            >
              <DataCtxReader__>
                {$ctx => (
                  <React.Fragment>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__xVmEh)}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.columns___85Aya
                      )}
                    >
                      <div
                        className={classNames(projectcss.all, sty.column__efG8)}
                      >
                        <CmsQueryRepeater
                          className={classNames(
                            "__wab_instance",
                            sty.cmsDataFetcher__wjXul
                          )}
                          desc={false}
                          emptyMessage={
                            <DataCtxReader__>
                              {$ctx => (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__i6YXw
                                  )}
                                >
                                  {"No matching published entries found."}
                                </div>
                              )}
                            </DataCtxReader__>
                          }
                          forceEmptyState={false}
                          forceLoadingState={false}
                          limit={1}
                          loadingMessage={
                            <DataCtxReader__>
                              {$ctx => (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__kBriv
                                  )}
                                >
                                  {"Loading..."}
                                </div>
                              )}
                            </DataCtxReader__>
                          }
                          noAutoRepeat={false}
                          noLayout={false}
                          offset={0}
                          useDraft={false}
                        >
                          <DataCtxReader__>
                            {$ctx => (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__swbUw
                                )}
                              >
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"card15"}
                                  data-plasmic-override={overrides.card15}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.card15
                                  )}
                                >
                                  <Stack__
                                    as={"div"}
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox__gu6Hu
                                    )}
                                  >
                                    {(() => {
                                      const child$Props = {
                                        arrows: false,
                                        autoplay: false,
                                        beforeChange: async (
                                          ...eventArgs: any
                                        ) => {
                                          generateStateOnChangePropForCodeComponents(
                                            $state,
                                            "currentSlide",
                                            ["sliderCarousel", "currentSlide"],
                                            SliderWrapper_Helpers
                                          ).apply(null, eventArgs);
                                        },
                                        centerMode: false,
                                        className: classNames(
                                          "__wab_instance",
                                          sty.sliderCarousel
                                        ),
                                        dots: true,
                                        initialSlide: generateStateValueProp(
                                          $state,
                                          ["sliderCarousel", "currentSlide"]
                                        ),
                                        pauseOnHover: true,
                                        ref: ref => {
                                          $refs["sliderCarousel"] = ref;
                                        },
                                        sliderScopeClassName:
                                          sty["sliderCarousel__slider"]
                                      };
                                      initializeCodeComponentStates(
                                        $state,
                                        [
                                          {
                                            name: "currentSlide",
                                            plasmicStateName:
                                              "sliderCarousel.currentSlide"
                                          }
                                        ],
                                        [],
                                        SliderWrapper_Helpers ?? {},
                                        child$Props
                                      );

                                      return (
                                        <SliderWrapper
                                          data-plasmic-name={"sliderCarousel"}
                                          data-plasmic-override={
                                            overrides.sliderCarousel
                                          }
                                          {...child$Props}
                                        >
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__umYpa
                                            )}
                                            field={"projectImage"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__lkOo4
                                            )}
                                            field={"projectImageAerial"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField___8Vvrl
                                            )}
                                            field={"projectImageCeremonial"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />
                                        </SliderWrapper>
                                      );
                                    })()}
                                    <CmsRowField
                                      className={classNames(
                                        "__wab_instance",
                                        sty.cmsEntryField__mDykj
                                      )}
                                      field={"kilowattPeak"}
                                      themeResetClassName={classNames(
                                        projectcss.root_reset,
                                        projectcss.root_reset_tags,
                                        projectcss.plasmic_default_styles,
                                        projectcss.plasmic_mixins,
                                        projectcss.plasmic_tokens,
                                        plasmic_antd_5_hostless_css.plasmic_tokens
                                      )}
                                    />

                                    <h4
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.h4,
                                        projectcss.__wab_text,
                                        sty.h4__t50Ww
                                      )}
                                    >
                                      {"Kilowatt (kWp) Project"}
                                    </h4>
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        sty.columns__cnVfQ
                                      )}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          sty.column__doErH
                                        )}
                                      >
                                        <CmsRowField
                                          className={classNames(
                                            "__wab_instance",
                                            sty.cmsEntryField__aCkaq
                                          )}
                                          field={"logo"}
                                          themeResetClassName={classNames(
                                            projectcss.root_reset,
                                            projectcss.root_reset_tags,
                                            projectcss.plasmic_default_styles,
                                            projectcss.plasmic_mixins,
                                            projectcss.plasmic_tokens,
                                            plasmic_antd_5_hostless_css.plasmic_tokens
                                          )}
                                        />
                                      </div>
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          sty.column___62EfD
                                        )}
                                      >
                                        <Stack__
                                          as={"div"}
                                          hasGap={true}
                                          className={classNames(
                                            projectcss.all,
                                            sty.freeBox__o3Buv
                                          )}
                                        >
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__sljwN
                                            )}
                                            field={"projectName"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />

                                          <Stack__
                                            as={"div"}
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox___6XWrK
                                            )}
                                          >
                                            <CmsRowField
                                              className={classNames(
                                                "__wab_instance",
                                                sty.cmsEntryField__hvTIc
                                              )}
                                              field={"projectLocation"}
                                              themeResetClassName={classNames(
                                                projectcss.root_reset,
                                                projectcss.root_reset_tags,
                                                projectcss.plasmic_default_styles,
                                                projectcss.plasmic_mixins,
                                                projectcss.plasmic_tokens,
                                                plasmic_antd_5_hostless_css.plasmic_tokens
                                              )}
                                            />
                                          </Stack__>
                                          <CmsRowField
                                            className={classNames(
                                              "__wab_instance",
                                              sty.cmsEntryField__vJibt
                                            )}
                                            field={"projectDescription"}
                                            themeResetClassName={classNames(
                                              projectcss.root_reset,
                                              projectcss.root_reset_tags,
                                              projectcss.plasmic_default_styles,
                                              projectcss.plasmic_mixins,
                                              projectcss.plasmic_tokens,
                                              plasmic_antd_5_hostless_css.plasmic_tokens
                                            )}
                                          />
                                        </Stack__>
                                      </div>
                                    </div>
                                  </Stack__>
                                </Stack__>
                              </div>
                            )}
                          </DataCtxReader__>
                        </CmsQueryRepeater>
                      </div>
                    </Stack__>
                  </React.Fragment>
                )}
              </DataCtxReader__>
            </CmsQueryRepeater>
          </div>
          <footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames(projectcss.all, sty.footer)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__ehkM)}>
              <div
                data-plasmic-name={"section5"}
                data-plasmic-override={overrides.section5}
                className={classNames(projectcss.all, sty.section5)}
              >
                <div
                  data-plasmic-name={"brandLogo3"}
                  data-plasmic-override={overrides.brandLogo3}
                  className={classNames(projectcss.all, sty.brandLogo3)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__xvvKp)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "100%"
                        : "50%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"240px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/copy_of_excell_website_final/images/excellHorizontalLogoPng.png",
                      fullWidth: 2001,
                      fullHeight: 706,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    data-plasmic-name={"section6"}
                    data-plasmic-override={overrides.section6}
                    className={classNames(projectcss.all, sty.section6)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__dqrQd)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__mYtJx
                        )}
                      >
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__wndNa
                          )}
                        >
                          {"Lighting pathways to sustainability"}
                        </h4>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kJQdQ
                          )}
                        >
                          {
                            "We empower industries by providing innovative, financial and technological solutions to energy problems.\n\n\r\nWe specialize in providing end-to-end solar solutions starting from expert energy assessment, to quality equipment and workmanship, and with lifetime support and maintenance."
                          }
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__swNe3
                          )}
                        >
                          {
                            "\u00a9 Copyright 2025 Excell Energy and Powergen Inc. All rights reserved."
                          }
                        </div>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__lSLw)}
                    >
                      <div
                        data-plasmic-name={"whereToFindUs3"}
                        data-plasmic-override={overrides.whereToFindUs3}
                        className={classNames(
                          projectcss.all,
                          sty.whereToFindUs3
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___2ESd2
                          )}
                        >
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5___1ONpJ
                            )}
                          >
                            {"Where to find us?"}
                          </h5>
                        </div>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__hiR5O
                          )}
                        >
                          <GeoAltFill1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__wQnjj
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___7Mztj
                            )}
                          >
                            {
                              "Unit 2618, 26th flr, High Street South Corporate Plaza Tower 1 26th St, cor 9th Ave, 1634 Taguig, Philippines"
                            }
                          </div>
                        </Stack__>
                      </div>
                      <div
                        data-plasmic-name={"connectWithUs4"}
                        data-plasmic-override={overrides.connectWithUs4}
                        className={classNames(
                          projectcss.all,
                          sty.connectWithUs4
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__d5GJe
                          )}
                        >
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__nmtiQ
                            )}
                          >
                            {"Connect with us!"}
                          </h5>
                        </div>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gxcLd
                          )}
                        >
                          <EnvelopeFill1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gIdYd
                            )}
                            role={"img"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__nnZaj
                            )}
                            component={Link}
                            href={"https://www.plasmic.app/"}
                            platform={"nextjs"}
                          >
                            {"solutions@excell.energy"}
                          </PlasmicLink__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__v9Dzq
                          )}
                        >
                          <Linkedin2SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__fq5Mq
                            )}
                            role={"img"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__wCz8V
                            )}
                            component={Link}
                            href={"https://www.plasmic.app/"}
                            platform={"nextjs"}
                          >
                            {"Excell Energy and PowerGen Corp."}
                          </PlasmicLink__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__v6BSc
                          )}
                        >
                          <Facebook2SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__cIqy9
                            )}
                            role={"img"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__zHvlV
                            )}
                            component={Link}
                            href={"https://www.plasmic.app/"}
                            platform={"nextjs"}
                          >
                            {"Excell Energy and PowerGen Corp."}
                          </PlasmicLink__>
                        </Stack__>
                      </div>
                      <div
                        data-plasmic-name={"getSolar3"}
                        data-plasmic-override={overrides.getSolar3}
                        className={classNames(projectcss.all, sty.getSolar3)}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__avhL
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__uFfWs
                            )}
                            component={Link}
                            href={`/get-solar`}
                            platform={"nextjs"}
                          >
                            <h5
                              className={classNames(
                                projectcss.all,
                                projectcss.h5,
                                projectcss.__wab_text,
                                sty.h5__m6LE
                              )}
                            >
                              {"Get Solar"}
                            </h5>
                            <ArrowUpRightCircleFill2SvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__wvsE6
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  projectPage: [
    "projectPage",
    "landingPage",
    "heading",
    "label",
    "navigationBar",
    "logo7",
    "solution4",
    "logo8",
    "projects",
    "card8",
    "sliderCarousel5",
    "card9",
    "sliderCarousel6",
    "card10",
    "sliderCarousel7",
    "card11",
    "sliderCarousel2",
    "card12",
    "sliderCarousel3",
    "card17",
    "sliderCarousel4",
    "card15",
    "sliderCarousel",
    "footer",
    "section5",
    "brandLogo3",
    "section6",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],
  landingPage: [
    "landingPage",
    "heading",
    "label",
    "navigationBar",
    "logo7",
    "solution4",
    "logo8"
  ],
  heading: ["heading", "label"],
  label: ["label"],
  navigationBar: ["navigationBar", "logo7", "solution4", "logo8"],
  logo7: ["logo7"],
  solution4: ["solution4"],
  logo8: ["logo8"],
  projects: [
    "projects",
    "card8",
    "sliderCarousel5",
    "card9",
    "sliderCarousel6",
    "card10",
    "sliderCarousel7",
    "card11",
    "sliderCarousel2",
    "card12",
    "sliderCarousel3",
    "card17",
    "sliderCarousel4",
    "card15",
    "sliderCarousel"
  ],
  card8: ["card8", "sliderCarousel5"],
  sliderCarousel5: ["sliderCarousel5"],
  card9: ["card9", "sliderCarousel6"],
  sliderCarousel6: ["sliderCarousel6"],
  card10: ["card10", "sliderCarousel7"],
  sliderCarousel7: ["sliderCarousel7"],
  card11: ["card11", "sliderCarousel2"],
  sliderCarousel2: ["sliderCarousel2"],
  card12: ["card12", "sliderCarousel3"],
  sliderCarousel3: ["sliderCarousel3"],
  card17: ["card17", "sliderCarousel4"],
  sliderCarousel4: ["sliderCarousel4"],
  card15: ["card15", "sliderCarousel"],
  sliderCarousel: ["sliderCarousel"],
  footer: [
    "footer",
    "section5",
    "brandLogo3",
    "section6",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],
  section5: [
    "section5",
    "brandLogo3",
    "section6",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],
  brandLogo3: [
    "brandLogo3",
    "section6",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],
  section6: ["section6", "whereToFindUs3", "connectWithUs4", "getSolar3"],
  whereToFindUs3: ["whereToFindUs3"],
  connectWithUs4: ["connectWithUs4"],
  getSolar3: ["getSolar3"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  projectPage: "div";
  landingPage: "div";
  heading: "div";
  label: "label";
  navigationBar: typeof NavigationBar;
  logo7: "a";
  solution4: "a";
  logo8: "a";
  projects: "div";
  card8: "div";
  sliderCarousel5: typeof SliderWrapper;
  card9: "div";
  sliderCarousel6: typeof SliderWrapper;
  card10: "div";
  sliderCarousel7: typeof SliderWrapper;
  card11: "div";
  sliderCarousel2: typeof SliderWrapper;
  card12: "div";
  sliderCarousel3: typeof SliderWrapper;
  card17: "div";
  sliderCarousel4: typeof SliderWrapper;
  card15: "div";
  sliderCarousel: typeof SliderWrapper;
  footer: "footer";
  section5: "div";
  brandLogo3: "div";
  section6: "div";
  whereToFindUs3: "div";
  connectWithUs4: "div";
  getSolar3: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicProjects__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicProjects__VariantsArgs;
    args?: PlasmicProjects__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicProjects__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicProjects__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicProjects__ArgProps,
          internalVariantPropNames: PlasmicProjects__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicProjects__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "projectPage") {
    func.displayName = "PlasmicProjects";
  } else {
    func.displayName = `PlasmicProjects.${nodeName}`;
  }
  return func;
}

export const PlasmicProjects = Object.assign(
  // Top-level PlasmicProjects renders the root element
  makeNodeComponent("projectPage"),
  {
    // Helper components rendering sub-elements
    landingPage: makeNodeComponent("landingPage"),
    heading: makeNodeComponent("heading"),
    label: makeNodeComponent("label"),
    navigationBar: makeNodeComponent("navigationBar"),
    logo7: makeNodeComponent("logo7"),
    solution4: makeNodeComponent("solution4"),
    logo8: makeNodeComponent("logo8"),
    projects: makeNodeComponent("projects"),
    card8: makeNodeComponent("card8"),
    sliderCarousel5: makeNodeComponent("sliderCarousel5"),
    card9: makeNodeComponent("card9"),
    sliderCarousel6: makeNodeComponent("sliderCarousel6"),
    card10: makeNodeComponent("card10"),
    sliderCarousel7: makeNodeComponent("sliderCarousel7"),
    card11: makeNodeComponent("card11"),
    sliderCarousel2: makeNodeComponent("sliderCarousel2"),
    card12: makeNodeComponent("card12"),
    sliderCarousel3: makeNodeComponent("sliderCarousel3"),
    card17: makeNodeComponent("card17"),
    sliderCarousel4: makeNodeComponent("sliderCarousel4"),
    card15: makeNodeComponent("card15"),
    sliderCarousel: makeNodeComponent("sliderCarousel"),
    footer: makeNodeComponent("footer"),
    section5: makeNodeComponent("section5"),
    brandLogo3: makeNodeComponent("brandLogo3"),
    section6: makeNodeComponent("section6"),
    whereToFindUs3: makeNodeComponent("whereToFindUs3"),
    connectWithUs4: makeNodeComponent("connectWithUs4"),
    getSolar3: makeNodeComponent("getSolar3"),

    // Metadata about props expected for PlasmicProjects
    internalVariantProps: PlasmicProjects__VariantProps,
    internalArgProps: PlasmicProjects__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicProjects;
/* prettier-ignore-end */
