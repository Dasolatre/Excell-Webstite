/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: b44pUm4nfW6C6Fzcbpx1wb
// Component: N4iXasOyRitU

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { NavigationBar } from "@plasmicpkgs/plasmic-nav";
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import { useScreenVariants as useScreenVariantswYGucrvFIpH5 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: wYGucrvFIpH5/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: b44pUm4nfW6C6Fzcbpx1wb/projectcss
import sty from "./PlasmicContactUs.module.css"; // plasmic-import: N4iXasOyRitU/css

import TelephoneFillSvgIcon from "./icons/PlasmicIcon__TelephoneFillSvg"; // plasmic-import: rB1NhDGKixEf/icon
import Linkedin1SvgIcon from "./icons/PlasmicIcon__Linkedin1Svg"; // plasmic-import: ylploKcJVHgw/icon
import EnvelopeFillSvgIcon from "./icons/PlasmicIcon__EnvelopeFillSvg"; // plasmic-import: PjTD-8pPbyIZ/icon
import Facebook1SvgIcon from "./icons/PlasmicIcon__Facebook1Svg"; // plasmic-import: UMMhTPe_ysJY/icon
import GeoAltFill1SvgIcon from "./icons/PlasmicIcon__GeoAltFill1Svg"; // plasmic-import: N661ASTPOBbP/icon
import EnvelopeFill1SvgIcon from "./icons/PlasmicIcon__EnvelopeFill1Svg"; // plasmic-import: K3EMqprSG4Sx/icon
import Linkedin2SvgIcon from "./icons/PlasmicIcon__Linkedin2Svg"; // plasmic-import: JSoyWAqD2o0A/icon
import Facebook2SvgIcon from "./icons/PlasmicIcon__Facebook2Svg"; // plasmic-import: 3taEzhm_7HIU/icon
import ArrowUpRightCircleFill2SvgIcon from "./icons/PlasmicIcon__ArrowUpRightCircleFill2Svg"; // plasmic-import: QV28IsMmBIyd/icon

createPlasmicElementProxy;

export type PlasmicContactUs__VariantMembers = {};
export type PlasmicContactUs__VariantsArgs = {};
type VariantPropType = keyof PlasmicContactUs__VariantsArgs;
export const PlasmicContactUs__VariantProps = new Array<VariantPropType>();

export type PlasmicContactUs__ArgsType = {};
type ArgPropType = keyof PlasmicContactUs__ArgsType;
export const PlasmicContactUs__ArgProps = new Array<ArgPropType>();

export type PlasmicContactUs__OverridesType = {
  contactUsPage?: Flex__<"div">;
  landingPage?: Flex__<"div">;
  container2?: Flex__<"div">;
  heading?: Flex__<"div">;
  navigationBar?: Flex__<typeof NavigationBar>;
  logo3?: Flex__<"a"> & Partial<LinkProps>;
  solution3?: Flex__<"a"> & Partial<LinkProps>;
  logo4?: Flex__<"a"> & Partial<LinkProps>;
  container?: Flex__<"div">;
  card?: Flex__<"div">;
  contactCard?: Flex__<"div">;
  contactCard2?: Flex__<"div">;
  contactCard3?: Flex__<"div">;
  contactCard4?: Flex__<"div">;
  card5?: Flex__<"div">;
  card6?: Flex__<"div">;
  footer?: Flex__<"footer">;
  section5?: Flex__<"div">;
  brandLogo3?: Flex__<"div">;
  section6?: Flex__<"div">;
  whereToFindUs3?: Flex__<"div">;
  connectWithUs4?: Flex__<"div">;
  getSolar3?: Flex__<"div">;
};

export interface DefaultContactUsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicContactUs__RenderFunc(props: {
  variants: PlasmicContactUs__VariantsArgs;
  args: PlasmicContactUs__ArgsType;
  overrides: PlasmicContactUs__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "variable",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantswYGucrvFIpH5()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"contactUsPage"}
          data-plasmic-override={overrides.contactUsPage}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.contactUsPage
          )}
          id={``}
        >
          <div
            data-plasmic-name={"landingPage"}
            data-plasmic-override={overrides.landingPage}
            className={classNames(projectcss.all, sty.landingPage)}
          >
            <div
              data-plasmic-name={"container2"}
              data-plasmic-override={overrides.container2}
              className={classNames(projectcss.all, sty.container2)}
            >
              <div
                data-plasmic-name={"heading"}
                data-plasmic-override={overrides.heading}
                className={classNames(projectcss.all, sty.heading)}
              >
                <div className={classNames(projectcss.all, sty.column__sGhdv)}>
                  <div className={classNames(projectcss.all, sty.freeBox__rFi)}>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__yYfjW)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "223px"
                          : "317px"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"16px"}
                      loading={"lazy"}
                    />

                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__q1Qys
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <React.Fragment>{"Got Questions?\n"}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Reach us Today"}
                          </span>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>{"Got Questions?\n"}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Reach us Today"}
                          </span>
                        </React.Fragment>
                      )}
                    </h1>
                  </div>
                </div>
              </div>
            </div>
            <NavigationBar
              data-plasmic-name={"navigationBar"}
              data-plasmic-override={overrides.navigationBar}
              brand={
                <PlasmicLink__
                  data-plasmic-name={"logo3"}
                  data-plasmic-override={overrides.logo3}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.logo3
                  )}
                  component={Link}
                  href={"#"}
                  platform={"nextjs"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__xIdN)}
                    displayHeight={"40px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"298px"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: "/plasmic/copy_of_excell_website_final/images/layer2.svg",
                      fullWidth: 220.00169372558594,
                      fullHeight: 80.00094604492188,
                      aspectRatio: 2.75
                    }}
                  />
                </PlasmicLink__>
              }
              className={classNames("__wab_instance", sty.navigationBar)}
              closeButton={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__pvRsa)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  src={{
                    src: "/plasmic/copy_of_excell_website_final/images/xLgSvg2.svg",
                    fullWidth: 24,
                    fullHeight: 25,
                    aspectRatio: 0.96
                  }}
                />
              }
              forceOpenMenu={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? true
                  : false
              }
              itemsGap={
                hasVariant(globalVariants, "screen", "mobileOnly") ? 48 : 48
              }
              menuItems={
                <React.Fragment>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__xkp7Y
                    )}
                    component={Link}
                    href={`/`}
                    platform={"nextjs"}
                  >
                    {"Home"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    data-plasmic-name={"solution3"}
                    data-plasmic-override={overrides.solution3}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.solution3
                    )}
                    component={Link}
                    href={`/solutions`}
                    platform={"nextjs"}
                  >
                    {"Solution"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__koPxj
                    )}
                    component={Link}
                    href={`/projects`}
                    platform={"nextjs"}
                  >
                    {"Projects"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    data-plasmic-name={"logo4"}
                    data-plasmic-override={overrides.logo4}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.logo4
                    )}
                    component={Link}
                    href={`/`}
                    platform={"nextjs"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__zv5G)}
                      displayHeight={"64px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"298px"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/copy_of_excell_website_final/images/excellVerticalLogoPng.png",
                        fullWidth: 987,
                        fullHeight: 1002,
                        aspectRatio: undefined
                      }}
                    />
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__r9MZp
                    )}
                    component={Link}
                    href={`/about`}
                    platform={"nextjs"}
                  >
                    {"About"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__zevCf
                    )}
                    component={Link}
                    href={`/learn`}
                    platform={"nextjs"}
                  >
                    {"Learn"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___8PNVy
                    )}
                    component={Link}
                    href={`/contact`}
                    platform={"nextjs"}
                  >
                    {"Contact Us"}
                  </PlasmicLink__>
                </React.Fragment>
              }
              openButton={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__ggw2O)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  src={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? {
                          src: "/plasmic/copy_of_excell_website_final/images/hamburgerMenuSvg.svg",
                          fullWidth: 24,
                          fullHeight: 25,
                          aspectRatio: 0.96
                        }
                      : undefined
                  }
                  width={"32"}
                />
              }
              responsiveBreakpoint={768}
            />
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"container"}
            data-plasmic-override={overrides.container}
            hasGap={true}
            className={classNames(projectcss.all, sty.container)}
            id={"reach-out-section"}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"card"}
              data-plasmic-override={overrides.card}
              hasGap={true}
              className={classNames(projectcss.all, sty.card)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__nHbU9)}
              >
                <div
                  data-plasmic-name={"contactCard"}
                  data-plasmic-override={overrides.contactCard}
                  className={classNames(projectcss.all, sty.contactCard)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__lncpP)}
                  >
                    <TelephoneFillSvgIcon
                      className={classNames(projectcss.all, sty.svg__xsNex)}
                      role={"img"}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__eOqgG)}
                    >
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__nknU
                        )}
                      >
                        {"Contact "}
                      </h4>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___7Rti
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mlC6
                          )}
                        >
                          {"(+63)912345678"}
                        </div>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </div>
                <div
                  data-plasmic-name={"contactCard2"}
                  data-plasmic-override={overrides.contactCard2}
                  className={classNames(projectcss.all, sty.contactCard2)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___0Cls5)}
                  >
                    <Linkedin1SvgIcon
                      className={classNames(projectcss.all, sty.svg__qknaB)}
                      role={"img"}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__lp0Ab)}
                    >
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__pLuQr
                        )}
                      >
                        {"LinkedIn"}
                      </h4>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__k9Zib
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___4TXoH
                          )}
                        >
                          {"Excell Energy"}
                        </div>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns___4RqyZ)}
              >
                <div
                  data-plasmic-name={"contactCard3"}
                  data-plasmic-override={overrides.contactCard3}
                  className={classNames(projectcss.all, sty.contactCard3)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__muEqQ)}
                  >
                    <EnvelopeFillSvgIcon
                      className={classNames(projectcss.all, sty.svg__aZkbW)}
                      role={"img"}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__iNTp)}
                    >
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__xwtDq
                        )}
                      >
                        {"Email"}
                      </h4>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lNSmw
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__t2Rf2
                          )}
                        >
                          {"solutions@excell.energy"}
                        </div>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </div>
                <div
                  data-plasmic-name={"contactCard4"}
                  data-plasmic-override={overrides.contactCard4}
                  className={classNames(projectcss.all, sty.contactCard4)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__sdEml)}
                  >
                    <Facebook1SvgIcon
                      className={classNames(projectcss.all, sty.svg__fB1W)}
                      role={"img"}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__nnSLh)}
                    >
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__bGwf9
                        )}
                      >
                        {"Facebook Page"}
                      </h4>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ouZhH
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__pYpe
                          )}
                        >
                          {"Excell Energy & Powergen Corp"}
                        </div>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </div>
              </Stack__>
              <div className={classNames(projectcss.all, sty.columns___1Obnu)}>
                <div
                  data-plasmic-name={"card5"}
                  data-plasmic-override={overrides.card5}
                  className={classNames(projectcss.all, sty.card5)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__eRM)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__udp0W)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5YcAf
                        )}
                      >
                        {"Can\u2019t find what you need?"}
                      </div>
                      <h1
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1__yryKt
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"We got you covered!"}
                          </span>
                        </React.Fragment>
                      </h1>
                    </Stack__>
                  </Stack__>
                </div>
                <div
                  data-plasmic-name={"card6"}
                  data-plasmic-override={overrides.card6}
                  className={classNames(projectcss.all, sty.card6)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__uqmmZ)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__cpkcq)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cm5So
                        )}
                      >
                        {
                          "Let our experts guide you in finding the best energy solution for your business or industry."
                        }
                      </div>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link___7OjvX
                        )}
                        component={Link}
                        href={`/get-solar`}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8Rj7U
                          )}
                        >
                          {"Send Us Your Questions"}
                        </div>
                      </PlasmicLink__>
                    </Stack__>
                  </Stack__>
                </div>
              </div>
            </Stack__>
          </Stack__>
          <footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames(projectcss.all, sty.footer)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__f4Eaa)}>
              <div
                data-plasmic-name={"section5"}
                data-plasmic-override={overrides.section5}
                className={classNames(projectcss.all, sty.section5)}
              >
                <div
                  data-plasmic-name={"brandLogo3"}
                  data-plasmic-override={overrides.brandLogo3}
                  className={classNames(projectcss.all, sty.brandLogo3)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__wGin)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "100%"
                        : "50%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"240px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/copy_of_excell_website_final/images/excellHorizontalLogoPng.png",
                      fullWidth: 2001,
                      fullHeight: 706,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    data-plasmic-name={"section6"}
                    data-plasmic-override={overrides.section6}
                    className={classNames(projectcss.all, sty.section6)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__bt4A1)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___65OJk
                        )}
                      >
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__wAyt
                          )}
                        >
                          {"Better Energy, Better Business."}
                        </h4>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tuEQo
                          )}
                        >
                          {
                            "We help businesses thrive by turning unused spaces into energy-saving assets. Our end-to-end solar solutions\u2014from expert energy assessments to premium installations and lifetime support\u2014are built for long-term value, reliability, and sustainability."
                          }
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zl9Eb
                          )}
                        >
                          {
                            "\u00a9 Copyright 2025 Excell Energy and Powergen Inc. All rights reserved."
                          }
                        </div>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__j03ZA)}
                    >
                      <div
                        data-plasmic-name={"whereToFindUs3"}
                        data-plasmic-override={overrides.whereToFindUs3}
                        className={classNames(
                          projectcss.all,
                          sty.whereToFindUs3
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__uUclW
                          )}
                        >
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__hdXJq
                            )}
                          >
                            {"Where to find us?"}
                          </h5>
                        </div>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___8Ib5A
                          )}
                        >
                          <GeoAltFill1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___8UK8K
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__u8Bf9
                            )}
                          >
                            {
                              "Unit 2618, 26th flr, High Street South Corporate Plaza Tower 1 26th St, cor 9th Ave, 1634 Taguig, Philippines"
                            }
                          </div>
                        </Stack__>
                      </div>
                      <div
                        data-plasmic-name={"connectWithUs4"}
                        data-plasmic-override={overrides.connectWithUs4}
                        className={classNames(
                          projectcss.all,
                          sty.connectWithUs4
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__k1CDn
                          )}
                        >
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__ah85U
                            )}
                          >
                            {"Connect with us!"}
                          </h5>
                        </div>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bbGhJ
                          )}
                        >
                          <EnvelopeFill1SvgIcon
                            className={classNames(projectcss.all, sty.svg__kP)}
                            role={"img"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__uvIB
                            )}
                            component={Link}
                            href={"https://www.plasmic.app/"}
                            platform={"nextjs"}
                          >
                            {"solutions@excell.energy"}
                          </PlasmicLink__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__iZudt
                          )}
                        >
                          <Linkedin2SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gVf2
                            )}
                            role={"img"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__nP9Ks
                            )}
                            component={Link}
                            href={"https://www.plasmic.app/"}
                            platform={"nextjs"}
                          >
                            {"Excell Energy and PowerGen Corp."}
                          </PlasmicLink__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ucQrz
                          )}
                        >
                          <Facebook2SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__fKcK
                            )}
                            role={"img"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__q7YDt
                            )}
                            component={Link}
                            href={"https://www.plasmic.app/"}
                            platform={"nextjs"}
                          >
                            {"Excell Energy and PowerGen Corp."}
                          </PlasmicLink__>
                        </Stack__>
                      </div>
                      <div
                        data-plasmic-name={"getSolar3"}
                        data-plasmic-override={overrides.getSolar3}
                        className={classNames(projectcss.all, sty.getSolar3)}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__pzTyv
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__cgk5
                            )}
                            component={Link}
                            href={`/get-solar`}
                            platform={"nextjs"}
                          >
                            <h5
                              className={classNames(
                                projectcss.all,
                                projectcss.h5,
                                projectcss.__wab_text,
                                sty.h5__vOpH4
                              )}
                            >
                              {"Get Solar"}
                            </h5>
                            <ArrowUpRightCircleFill2SvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__lyunh
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  contactUsPage: [
    "contactUsPage",
    "landingPage",
    "container2",
    "heading",
    "navigationBar",
    "logo3",
    "solution3",
    "logo4",
    "container",
    "card",
    "contactCard",
    "contactCard2",
    "contactCard3",
    "contactCard4",
    "card5",
    "card6",
    "footer",
    "section5",
    "brandLogo3",
    "section6",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],
  landingPage: [
    "landingPage",
    "container2",
    "heading",
    "navigationBar",
    "logo3",
    "solution3",
    "logo4"
  ],
  container2: ["container2", "heading"],
  heading: ["heading"],
  navigationBar: ["navigationBar", "logo3", "solution3", "logo4"],
  logo3: ["logo3"],
  solution3: ["solution3"],
  logo4: ["logo4"],
  container: [
    "container",
    "card",
    "contactCard",
    "contactCard2",
    "contactCard3",
    "contactCard4",
    "card5",
    "card6"
  ],
  card: [
    "card",
    "contactCard",
    "contactCard2",
    "contactCard3",
    "contactCard4",
    "card5",
    "card6"
  ],
  contactCard: ["contactCard"],
  contactCard2: ["contactCard2"],
  contactCard3: ["contactCard3"],
  contactCard4: ["contactCard4"],
  card5: ["card5"],
  card6: ["card6"],
  footer: [
    "footer",
    "section5",
    "brandLogo3",
    "section6",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],
  section5: [
    "section5",
    "brandLogo3",
    "section6",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],
  brandLogo3: [
    "brandLogo3",
    "section6",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],
  section6: ["section6", "whereToFindUs3", "connectWithUs4", "getSolar3"],
  whereToFindUs3: ["whereToFindUs3"],
  connectWithUs4: ["connectWithUs4"],
  getSolar3: ["getSolar3"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  contactUsPage: "div";
  landingPage: "div";
  container2: "div";
  heading: "div";
  navigationBar: typeof NavigationBar;
  logo3: "a";
  solution3: "a";
  logo4: "a";
  container: "div";
  card: "div";
  contactCard: "div";
  contactCard2: "div";
  contactCard3: "div";
  contactCard4: "div";
  card5: "div";
  card6: "div";
  footer: "footer";
  section5: "div";
  brandLogo3: "div";
  section6: "div";
  whereToFindUs3: "div";
  connectWithUs4: "div";
  getSolar3: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicContactUs__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicContactUs__VariantsArgs;
    args?: PlasmicContactUs__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicContactUs__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicContactUs__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicContactUs__ArgProps,
          internalVariantPropNames: PlasmicContactUs__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicContactUs__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "contactUsPage") {
    func.displayName = "PlasmicContactUs";
  } else {
    func.displayName = `PlasmicContactUs.${nodeName}`;
  }
  return func;
}

export const PlasmicContactUs = Object.assign(
  // Top-level PlasmicContactUs renders the root element
  makeNodeComponent("contactUsPage"),
  {
    // Helper components rendering sub-elements
    landingPage: makeNodeComponent("landingPage"),
    container2: makeNodeComponent("container2"),
    heading: makeNodeComponent("heading"),
    navigationBar: makeNodeComponent("navigationBar"),
    logo3: makeNodeComponent("logo3"),
    solution3: makeNodeComponent("solution3"),
    logo4: makeNodeComponent("logo4"),
    container: makeNodeComponent("container"),
    card: makeNodeComponent("card"),
    contactCard: makeNodeComponent("contactCard"),
    contactCard2: makeNodeComponent("contactCard2"),
    contactCard3: makeNodeComponent("contactCard3"),
    contactCard4: makeNodeComponent("contactCard4"),
    card5: makeNodeComponent("card5"),
    card6: makeNodeComponent("card6"),
    footer: makeNodeComponent("footer"),
    section5: makeNodeComponent("section5"),
    brandLogo3: makeNodeComponent("brandLogo3"),
    section6: makeNodeComponent("section6"),
    whereToFindUs3: makeNodeComponent("whereToFindUs3"),
    connectWithUs4: makeNodeComponent("connectWithUs4"),
    getSolar3: makeNodeComponent("getSolar3"),

    // Metadata about props expected for PlasmicContactUs
    internalVariantProps: PlasmicContactUs__VariantProps,
    internalArgProps: PlasmicContactUs__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicContactUs;
/* prettier-ignore-end */
