/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: b44pUm4nfW6C6Fzcbpx1wb
// Component: 3ubpJU3DJ_5g

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { NavigationBar } from "@plasmicpkgs/plasmic-nav";
import { Reveal } from "@plasmicpkgs/react-awesome-reveal";
import { SliderWrapper } from "@plasmicpkgs/react-slick";
import { sliderHelpers as SliderWrapper_Helpers } from "@plasmicpkgs/react-slick";
import YouTube from "@plasmicpkgs/react-youtube";

import { useScreenVariants as useScreenVariantswYGucrvFIpH5 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: wYGucrvFIpH5/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: b44pUm4nfW6C6Fzcbpx1wb/projectcss
import sty from "./PlasmicLanding.module.css"; // plasmic-import: 3ubpJU3DJ_5g/css

import ArrowRightIcon from "./icons/PlasmicIcon__ArrowRight"; // plasmic-import: bjpoZj6j_N3c/icon
import VectorSvgIcon from "./icons/PlasmicIcon__VectorSvg"; // plasmic-import: rqoaJ_W9955m/icon
import SunFillSvgIcon from "./icons/PlasmicIcon__SunFillSvg"; // plasmic-import: chufAfZw529U/icon
import Vector1SvgIcon from "./icons/PlasmicIcon__Vector1Svg"; // plasmic-import: -4izEOidwgzj/icon
import GeoAltFill1SvgIcon from "./icons/PlasmicIcon__GeoAltFill1Svg"; // plasmic-import: N661ASTPOBbP/icon
import EnvelopeFill1SvgIcon from "./icons/PlasmicIcon__EnvelopeFill1Svg"; // plasmic-import: K3EMqprSG4Sx/icon
import Linkedin2SvgIcon from "./icons/PlasmicIcon__Linkedin2Svg"; // plasmic-import: JSoyWAqD2o0A/icon
import Facebook2SvgIcon from "./icons/PlasmicIcon__Facebook2Svg"; // plasmic-import: 3taEzhm_7HIU/icon
import ArrowUpRightCircleFill2SvgIcon from "./icons/PlasmicIcon__ArrowUpRightCircleFill2Svg"; // plasmic-import: QV28IsMmBIyd/icon

createPlasmicElementProxy;

export type PlasmicLanding__VariantMembers = {};
export type PlasmicLanding__VariantsArgs = {};
type VariantPropType = keyof PlasmicLanding__VariantsArgs;
export const PlasmicLanding__VariantProps = new Array<VariantPropType>();

export type PlasmicLanding__ArgsType = {};
type ArgPropType = keyof PlasmicLanding__ArgsType;
export const PlasmicLanding__ArgProps = new Array<ArgPropType>();

export type PlasmicLanding__OverridesType = {
  homePage?: Flex__<"div">;
  landingPage?: Flex__<"div">;
  navigationBar?: Flex__<typeof NavigationBar>;
  logo?: Flex__<"a"> & Partial<LinkProps>;
  solution2?: Flex__<"a"> & Partial<LinkProps>;
  logo2?: Flex__<"a"> & Partial<LinkProps>;
  headerTxt?: Flex__<"div">;
  taglineTxt?: Flex__<"div">;
  text?: Flex__<"h5">;
  btns2?: Flex__<"div">;
  content?: Flex__<"div">;
  about?: Flex__<"div">;
  text2?: Flex__<"div">;
  button?: Flex__<"div">;
  projects?: Flex__<"div">;
  sliderCarousel2?: Flex__<typeof SliderWrapper>;
  maintenance?: Flex__<"div">;
  investment?: Flex__<"div">;
  upgradeProperty?: Flex__<"div">;
  co2?: Flex__<"div">;
  saveThePlanet?: Flex__<"div">;
  everyone?: Flex__<"div">;
  lowerEnergyBill?: Flex__<"div">;
  youTube?: Flex__<typeof YouTube>;
  button3?: Flex__<"div">;
  learn?: Flex__<"div">;
  text6?: Flex__<"div">;
  button2?: Flex__<"div">;
  contactUs?: Flex__<"div">;
  columns?: Flex__<"div">;
  footer?: Flex__<"footer">;
  section5?: Flex__<"div">;
  brandLogo3?: Flex__<"div">;
  section6?: Flex__<"div">;
  h4?: Flex__<"h4">;
  whereToFindUs3?: Flex__<"div">;
  connectWithUs4?: Flex__<"div">;
  getSolar3?: Flex__<"div">;
};

export interface DefaultLandingProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicLanding__RenderFunc(props: {
  variants: PlasmicLanding__VariantsArgs;
  args: PlasmicLanding__ArgsType;
  overrides: PlasmicLanding__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "sliderCarousel2.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,

        refName: "sliderCarousel2",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantswYGucrvFIpH5()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"homePage"}
          data-plasmic-override={overrides.homePage}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.homePage
          )}
        >
          <div
            data-plasmic-name={"landingPage"}
            data-plasmic-override={overrides.landingPage}
            className={classNames(projectcss.all, sty.landingPage)}
          >
            <NavigationBar
              data-plasmic-name={"navigationBar"}
              data-plasmic-override={overrides.navigationBar}
              brand={
                <PlasmicLink__
                  data-plasmic-name={"logo"}
                  data-plasmic-override={overrides.logo}
                  className={classNames(projectcss.all, projectcss.a, sty.logo)}
                  component={Link}
                  href={"#"}
                  platform={"nextjs"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__a2PcU)}
                    displayHeight={"40px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"298px"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: "/plasmic/copy_of_excell_website_final/images/layer2.svg",
                      fullWidth: 220.00169372558594,
                      fullHeight: 80.00094604492188,
                      aspectRatio: 2.75
                    }}
                  />
                </PlasmicLink__>
              }
              className={classNames("__wab_instance", sty.navigationBar)}
              closeButton={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__utVjC)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  src={{
                    src: "/plasmic/copy_of_excell_website_final/images/xLgSvg2.svg",
                    fullWidth: 24,
                    fullHeight: 25,
                    aspectRatio: 0.96
                  }}
                />
              }
              forceOpenMenu={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? true
                  : false
              }
              itemsGap={
                hasVariant(globalVariants, "screen", "mobileOnly") ? 48 : 48
              }
              menuItems={
                <React.Fragment>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__tVm5F
                    )}
                    component={Link}
                    href={`/`}
                    platform={"nextjs"}
                  >
                    {"Home"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    data-plasmic-name={"solution2"}
                    data-plasmic-override={overrides.solution2}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.solution2
                    )}
                    component={Link}
                    href={`/solutions`}
                    platform={"nextjs"}
                  >
                    {"Solution"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__cdege
                    )}
                    component={Link}
                    href={`/projects`}
                    platform={"nextjs"}
                  >
                    {"Projects"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    data-plasmic-name={"logo2"}
                    data-plasmic-override={overrides.logo2}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.logo2
                    )}
                    component={Link}
                    href={`/`}
                    platform={"nextjs"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__oZZul)}
                      displayHeight={"64px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"298px"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/copy_of_excell_website_final/images/excellVerticalLogoPng.png",
                        fullWidth: 987,
                        fullHeight: 1002,
                        aspectRatio: undefined
                      }}
                    />
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__gIeLr
                    )}
                    component={Link}
                    href={`/about`}
                    platform={"nextjs"}
                  >
                    {"About"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__q1WzZ
                    )}
                    component={Link}
                    href={`/learn`}
                    platform={"nextjs"}
                  >
                    {"Learn"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___5Hn7W
                    )}
                    component={Link}
                    href={`/contact`}
                    platform={"nextjs"}
                  >
                    {"Contact Us"}
                  </PlasmicLink__>
                </React.Fragment>
              }
              openButton={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___2D8UW)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  src={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? {
                          src: "/plasmic/copy_of_excell_website_final/images/hamburgerMenuSvg.svg",
                          fullWidth: 24,
                          fullHeight: 25,
                          aspectRatio: 0.96
                        }
                      : undefined
                  }
                  width={"32"}
                />
              }
              responsiveBreakpoint={768}
            />

            <div className={classNames(projectcss.all, sty.freeBox__pHxPe)}>
              <div
                data-plasmic-name={"headerTxt"}
                data-plasmic-override={overrides.headerTxt}
                className={classNames(projectcss.all, sty.headerTxt)}
              >
                <div className={classNames(projectcss.all, sty.column__iWZaJ)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__atxFy)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__m9KvS)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "223px"
                          : "317px"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"16px"}
                      loading={"lazy"}
                    />

                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__txjot
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <React.Fragment>
                            {"Democratizing access to "}
                          </React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Clean, Sustainable, Renewable Energy"}
                          </span>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>
                            {"Democratizing Access to \n"}
                          </React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Clean, Sustainable, Renewable Energy"}
                          </span>
                        </React.Fragment>
                      )}
                    </h1>
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"taglineTxt"}
                data-plasmic-override={overrides.taglineTxt}
                className={classNames(projectcss.all, sty.taglineTxt)}
              >
                <div className={classNames(projectcss.all, sty.column__jBg9A)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__amv42)}
                  >
                    <h5
                      data-plasmic-name={"text"}
                      data-plasmic-override={overrides.text}
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.text
                      )}
                    >
                      {"Better Energy. Better Solution"}
                    </h5>
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"btns2"}
                data-plasmic-override={overrides.btns2}
                className={classNames(projectcss.all, sty.btns2)}
              >
                <div className={classNames(projectcss.all, sty.column__i7IyB)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__jzQwC
                    )}
                    component={Link}
                    href={`/solutions`}
                    platform={"nextjs"}
                  >
                    {"Find your Solar Solution"}
                  </PlasmicLink__>
                </div>
                <div className={classNames(projectcss.all, sty.column__c7D3E)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__tZvR7
                    )}
                    component={Link}
                    href={`/get-solar`}
                    platform={"nextjs"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__tPpvq)}
                      displayHeight={"24px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"24px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/copy_of_excell_website_final/images/lightningChargeFillSvg.svg",
                        fullWidth: 24,
                        fullHeight: 24,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__adN
                      )}
                    >
                      {"Get Solar Now"}
                    </div>
                  </Stack__>
                </div>
              </div>
            </div>
          </div>
          <div
            data-plasmic-name={"content"}
            data-plasmic-override={overrides.content}
            className={classNames(projectcss.all, sty.content)}
            id={"explore-section"}
          >
            <div
              data-plasmic-name={"about"}
              data-plasmic-override={overrides.about}
              className={classNames(projectcss.all, sty.about)}
            >
              <div className={classNames(projectcss.all, sty.column__pnieC)}>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__dGnr)}
                  triggerOnce={true}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__cxop
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"What"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {" "}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"difference"}
                      </span>
                      <React.Fragment>{" do we make?"}</React.Fragment>
                    </React.Fragment>
                  </h1>
                </Reveal>
                <div
                  data-plasmic-name={"text2"}
                  data-plasmic-override={overrides.text2}
                  className={classNames(projectcss.all, sty.text2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sq7S7
                    )}
                  >
                    {
                      "We don\u2019t just install solar panels\u2014we solve energy problems. Excell Energy empowers customers with innovative, financially smart, and tech-forward solar solutions."
                    }
                  </div>
                </div>
                <div
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames(projectcss.all, sty.button)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__xk1Ae)}
                  >
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__w8Fq
                      )}
                      component={Link}
                      href={`/about`}
                      platform={"nextjs"}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ac8T8
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 600 }}
                          >
                            {"About Excell Energy"}
                          </span>
                        </React.Fragment>
                      </div>
                      <ArrowRightIcon
                        className={classNames(projectcss.all, sty.svg___5VH3)}
                        role={"img"}
                      />
                    </PlasmicLink__>
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column__pw0EW)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__fTnFz)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "267px"
                      : "629px"
                  }
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "450px"
                      : "730px"
                  }
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/copy_of_excell_website_final/images/specialistTechnicianProfessionalEngineerWithLaptopTabletMaintenanceCheckingInstallingSolarRoofPanelFactoryRooftopSunlightEngineersHoldingTabletCheckSolarRoofJpg.jpg",
                    fullWidth: 7952,
                    fullHeight: 5304,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
            <div
              data-plasmic-name={"projects"}
              data-plasmic-override={overrides.projects}
              className={classNames(projectcss.all, sty.projects)}
            >
              <div className={classNames(projectcss.all, sty.column__iQrTg)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__bqTFz)}
                  displayHeight={"100%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                />

                {(() => {
                  const child$Props = {
                    arrows: false,
                    autoplay: true,
                    autoplaySpeed: 0,
                    beforeChange: async (...eventArgs: any) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "currentSlide",
                        ["sliderCarousel2", "currentSlide"],
                        SliderWrapper_Helpers
                      ).apply(null, eventArgs);
                    },
                    centerMode: true,
                    className: classNames(
                      "__wab_instance",
                      sty.sliderCarousel2
                    ),
                    cssEase: "linear",
                    dots: false,
                    initialSlide: generateStateValueProp($state, [
                      "sliderCarousel2",
                      "currentSlide"
                    ]),
                    pauseOnFocus: true,
                    ref: ref => {
                      $refs["sliderCarousel2"] = ref;
                    },
                    sliderScopeClassName: sty["sliderCarousel2__slider"],
                    speed: 3000
                  };
                  initializeCodeComponentStates(
                    $state,
                    [
                      {
                        name: "currentSlide",
                        plasmicStateName: "sliderCarousel2.currentSlide"
                      }
                    ],
                    [],
                    SliderWrapper_Helpers ?? {},
                    child$Props
                  );

                  return (
                    <SliderWrapper
                      data-plasmic-name={"sliderCarousel2"}
                      data-plasmic-override={overrides.sliderCarousel2}
                      {...child$Props}
                    >
                      <div
                        data-plasmic-name={"maintenance"}
                        data-plasmic-override={overrides.maintenance}
                        className={classNames(projectcss.all, sty.maintenance)}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__nDDcT)}
                          displayHeight={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "262px"
                              : "283px"
                          }
                          displayMaxHeight={"none"}
                          displayMaxWidth={"646px"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "276px"
                              : "605px"
                          }
                          src={{
                            src: "/plasmic/copy_of_excell_website_final/images/settingsGif.gif",
                            fullWidth: 372,
                            fullHeight: 372,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__whwmJ
                          )}
                        >
                          {"Negligible Maintenance"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"investment"}
                        data-plasmic-override={overrides.investment}
                        className={classNames(projectcss.all, sty.investment)}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__tfduz)}
                          displayHeight={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "262px"
                              : "283px"
                          }
                          displayMaxHeight={"none"}
                          displayMaxWidth={"646px"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "276px"
                              : "605px"
                          }
                          src={{
                            src: "/plasmic/copy_of_excell_website_final/images/safeGif.gif",
                            fullWidth: 372,
                            fullHeight: 372,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vAtp
                          )}
                        >
                          {"Safe Investment"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"upgradeProperty"}
                        data-plasmic-override={overrides.upgradeProperty}
                        className={classNames(
                          projectcss.all,
                          sty.upgradeProperty
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__nt2Se)}
                          displayHeight={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "262px"
                              : "283px"
                          }
                          displayMaxHeight={"none"}
                          displayMaxWidth={"646px"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "276px"
                              : "605px"
                          }
                          src={{
                            src: "/plasmic/copy_of_excell_website_final/images/moveInGif.gif",
                            fullWidth: 372,
                            fullHeight: 372,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7PwH5
                          )}
                        >
                          {"Upgrade Property"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"co2"}
                        data-plasmic-override={overrides.co2}
                        className={classNames(projectcss.all, sty.co2)}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img___4Hbxt)}
                          displayHeight={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "262px"
                              : "283px"
                          }
                          displayMaxHeight={"none"}
                          displayMaxWidth={"646px"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "276px"
                              : "605px"
                          }
                          src={{
                            src: "/plasmic/copy_of_excell_website_final/images/co2Gif.gif",
                            fullWidth: 372,
                            fullHeight: 372,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__uTwD
                          )}
                        >
                          {"Reduce Carbon Footprint"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"saveThePlanet"}
                        data-plasmic-override={overrides.saveThePlanet}
                        className={classNames(
                          projectcss.all,
                          sty.saveThePlanet
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__hLlzf)}
                          displayHeight={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "262px"
                              : "283px"
                          }
                          displayMaxHeight={"none"}
                          displayMaxWidth={"646px"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "276px"
                              : "605px"
                          }
                          src={{
                            src: "/plasmic/copy_of_excell_website_final/images/organicGif.gif",
                            fullWidth: 372,
                            fullHeight: 372,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ttEhK
                          )}
                        >
                          {"Save the Planet"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"everyone"}
                        data-plasmic-override={overrides.everyone}
                        className={classNames(projectcss.all, sty.everyone)}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img___7XytO)}
                          displayHeight={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "262px"
                              : "283px"
                          }
                          displayMaxHeight={"none"}
                          displayMaxWidth={"646px"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "276px"
                              : "605px"
                          }
                          src={{
                            src: "/plasmic/copy_of_excell_website_final/images/systemRegular199AttributionHoverAttributionGif.gif",
                            fullWidth: 400,
                            fullHeight: 400,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rrG4C
                          )}
                        >
                          {"For Everyone"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"lowerEnergyBill"}
                        data-plasmic-override={overrides.lowerEnergyBill}
                        className={classNames(
                          projectcss.all,
                          sty.lowerEnergyBill
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__gqXt)}
                          displayHeight={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "262px"
                              : "283px"
                          }
                          displayMaxHeight={"none"}
                          displayMaxWidth={"646px"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "276px"
                              : "605px"
                          }
                          src={{
                            src: "/plasmic/copy_of_excell_website_final/images/renewableEnergyGif.gif",
                            fullWidth: 372,
                            fullHeight: 372,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__d1Su2
                          )}
                        >
                          {"Lower Energy Bill\n"}
                        </div>
                      </div>
                    </SliderWrapper>
                  );
                })()}
                <div className={classNames(projectcss.all, sty.freeBox__qneX7)}>
                  <YouTube
                    data-plasmic-name={"youTube"}
                    data-plasmic-override={overrides.youTube}
                    className={classNames("__wab_instance", sty.youTube)}
                    modestbranding={false}
                    rel={false}
                    videoId={"0E0APu6hNZk"}
                  />
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column__soOn)}>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__ultJe)}
                  duration={1500}
                  effect={"fade"}
                  triggerOnce={true}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__xUiz
                    )}
                  >
                    {"Why Solar?"}
                  </h1>
                </Reveal>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__ffNY)}
                  triggerOnce={true}
                >
                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__psRg1)}
                    triggerOnce={true}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__gsa0T
                      )}
                    >
                      {"Real Projects,\nReal Impact"}
                    </h1>
                  </Reveal>
                </Reveal>
                <div className={classNames(projectcss.all, sty.freeBox__gLSa)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tWrnc
                    )}
                  >
                    {
                      "Get long-term value, fast. Solar energy cuts your electricity bills, lowers your carbon footprint, and gives you control of your energy future.\r"
                    }
                  </div>
                </div>
                <div
                  data-plasmic-name={"button3"}
                  data-plasmic-override={overrides.button3}
                  className={classNames(projectcss.all, sty.button3)}
                >
                  <div className={classNames(projectcss.all, sty.column__hMiV)}>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__nDDj
                      )}
                      component={Link}
                      href={`/projects`}
                      platform={"nextjs"}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yyNWk
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 600 }}
                          >
                            {"Explore our Portfolio"}
                          </span>
                        </React.Fragment>
                      </div>
                      <ArrowRightIcon
                        className={classNames(projectcss.all, sty.svg__azSv)}
                        role={"img"}
                      />
                    </PlasmicLink__>
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"learn"}
              data-plasmic-override={overrides.learn}
              className={classNames(projectcss.all, sty.learn)}
            >
              <div className={classNames(projectcss.all, sty.column__xbY6O)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___19Dl5)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "267px"
                      : "629px"
                  }
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "450px"
                      : "730px"
                  }
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/copy_of_excell_website_final/images/youngAsianFemaleInspectorEngineerTouchingCheckingOperationPhotovoltaicSolarPanelOutdoorStationHoldingLaptopComputerLookingCameraWithSmileCopySpaceJpg.jpg",
                    fullWidth: 6048,
                    fullHeight: 4024,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___7NFg0)}>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal___3C87H)}
                  triggerOnce={true}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__qnKQ
                    )}
                  >
                    {"Why go Solar now?"}
                  </h1>
                </Reveal>
                <div
                  data-plasmic-name={"text6"}
                  data-plasmic-override={overrides.text6}
                  className={classNames(projectcss.all, sty.text6)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mp4Bq
                    )}
                  >
                    {
                      "We don\u2019t just install solar panels\u2014we solve energy problems. Excell Energy empowers customers with innovative, financially smart, and tech-forward solar solutions."
                    }
                  </div>
                </div>
                <div
                  data-plasmic-name={"button2"}
                  data-plasmic-override={overrides.button2}
                  className={classNames(projectcss.all, sty.button2)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__o2E4R)}
                  >
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__vjQv
                      )}
                      component={Link}
                      href={`/learn`}
                      platform={"nextjs"}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__j2Vy5
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 600 }}
                          >
                            {"Learn more about Solar"}
                          </span>
                        </React.Fragment>
                      </div>
                      <ArrowRightIcon
                        className={classNames(projectcss.all, sty.svg__yoC6R)}
                        role={"img"}
                      />
                    </PlasmicLink__>
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"contactUs"}
              data-plasmic-override={overrides.contactUs}
              className={classNames(projectcss.all, sty.contactUs)}
            >
              <div className={classNames(projectcss.all, sty.column__naqxG)}>
                <div
                  data-plasmic-name={"columns"}
                  data-plasmic-override={overrides.columns}
                  className={classNames(projectcss.all, sty.columns)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__pd2T9)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__qM1CC)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__s5Ovx
                        )}
                      >
                        <VectorSvgIcon
                          className={classNames(projectcss.all, sty.svg__lzMr6)}
                          role={"img"}
                        />
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___5Cogp
                        )}
                      >
                        <SunFillSvgIcon
                          className={classNames(projectcss.all, sty.svg__aKsg1)}
                          role={"img"}
                        />
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__jYEl
                        )}
                      >
                        <Vector1SvgIcon
                          className={classNames(projectcss.all, sty.svg__mLhw)}
                          role={"img"}
                        />
                      </div>
                    </Stack__>
                  </div>
                </div>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__mckuw)}
                  duration={1500}
                  effect={"fade"}
                  triggerOnce={true}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1___41Kx9
                    )}
                  >
                    {"Why Solar?"}
                  </h1>
                </Reveal>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal___4Ivb9)}
                  triggerOnce={true}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__sEprM
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 300 }}
                      >
                        {"Connect with us and"}
                      </span>
                      <React.Fragment>{"\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Get Free Consultation"}
                      </span>
                    </React.Fragment>
                  </h1>
                </Reveal>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kElaV)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___76Kuq
                    )}
                  >
                    {
                      "Ready to make the switch to solar? Let our experts guide you in finding the best energy solution for your business or industry."
                    }
                  </div>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__b6Z2T
                    )}
                    component={Link}
                    href={`/get-solar`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aSnz9
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 600 }}
                        >
                          {"Send your Inquiry Today!"}
                        </span>
                      </React.Fragment>
                    </div>
                  </PlasmicLink__>
                </Stack__>
              </div>
            </div>
          </div>
          <footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames(projectcss.all, sty.footer)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__qEg9Z)}>
              <div
                data-plasmic-name={"section5"}
                data-plasmic-override={overrides.section5}
                className={classNames(projectcss.all, sty.section5)}
              >
                <div
                  data-plasmic-name={"brandLogo3"}
                  data-plasmic-override={overrides.brandLogo3}
                  className={classNames(projectcss.all, sty.brandLogo3)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__eTxhv)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "100%"
                        : "50%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"240px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/copy_of_excell_website_final/images/excellHorizontalLogoPng.png",
                      fullWidth: 2001,
                      fullHeight: 706,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    data-plasmic-name={"section6"}
                    data-plasmic-override={overrides.section6}
                    className={classNames(projectcss.all, sty.section6)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__lFqAg)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__mxQzW
                        )}
                      >
                        <h4
                          data-plasmic-name={"h4"}
                          data-plasmic-override={overrides.h4}
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4
                          )}
                        >
                          {"Better Energy. Better Business."}
                        </h4>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zub9S
                          )}
                        >
                          {
                            "We help businesses thrive by turning unused spaces into energy-saving assets. Our end-to-end solar solutions\u2014from expert energy assessments to premium installations and lifetime support\u2014are built for long-term value, reliability, and sustainability."
                          }
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__d2P7S
                          )}
                        >
                          {
                            "\u00a9 Copyright 2025 Excell Energy and Powergen Inc. All rights reserved."
                          }
                        </div>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__y36Bf)}
                    >
                      <div
                        data-plasmic-name={"whereToFindUs3"}
                        data-plasmic-override={overrides.whereToFindUs3}
                        className={classNames(
                          projectcss.all,
                          sty.whereToFindUs3
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___5UVAj
                          )}
                        >
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__aQ7Zj
                            )}
                          >
                            {"Where to find us?"}
                          </h5>
                        </div>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__avpd1
                          )}
                        >
                          <GeoAltFill1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__qipIf
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lnDtW
                            )}
                          >
                            {
                              "Unit 2618, 26th flr, High Street South Corporate Plaza Tower 1 26th St, cor 9th Ave, 1634 Taguig, Philippines"
                            }
                          </div>
                        </Stack__>
                      </div>
                      <div
                        data-plasmic-name={"connectWithUs4"}
                        data-plasmic-override={overrides.connectWithUs4}
                        className={classNames(
                          projectcss.all,
                          sty.connectWithUs4
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__kha2A
                          )}
                        >
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__mWa35
                            )}
                          >
                            {"Connect with us!"}
                          </h5>
                        </div>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__uF4I5
                          )}
                        >
                          <EnvelopeFill1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__oV35E
                            )}
                            role={"img"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__bqQy
                            )}
                            component={Link}
                            href={"https://www.plasmic.app/"}
                            platform={"nextjs"}
                          >
                            {"solutions@excell.energy"}
                          </PlasmicLink__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__wWdOf
                          )}
                        >
                          <Linkedin2SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ncEij
                            )}
                            role={"img"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__qBeF
                            )}
                            component={Link}
                            href={"https://www.plasmic.app/"}
                            platform={"nextjs"}
                          >
                            {"Excell Energy and PowerGen Corp."}
                          </PlasmicLink__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__wA0Dh
                          )}
                        >
                          <Facebook2SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__h6ENs
                            )}
                            role={"img"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__aEshK
                            )}
                            component={Link}
                            href={"https://www.plasmic.app/"}
                            platform={"nextjs"}
                          >
                            {"Excell Energy and PowerGen Corp."}
                          </PlasmicLink__>
                        </Stack__>
                      </div>
                      <div
                        data-plasmic-name={"getSolar3"}
                        data-plasmic-override={overrides.getSolar3}
                        className={classNames(projectcss.all, sty.getSolar3)}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ryWnq
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__bwala
                            )}
                            component={Link}
                            href={`/get-solar`}
                            platform={"nextjs"}
                          >
                            <h5
                              className={classNames(
                                projectcss.all,
                                projectcss.h5,
                                projectcss.__wab_text,
                                sty.h5__fLTja
                              )}
                            >
                              {"Get Solar"}
                            </h5>
                            <ArrowUpRightCircleFill2SvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__jkywe
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  homePage: [
    "homePage",
    "landingPage",
    "navigationBar",
    "logo",
    "solution2",
    "logo2",
    "headerTxt",
    "taglineTxt",
    "text",
    "btns2",
    "content",
    "about",
    "text2",
    "button",
    "projects",
    "sliderCarousel2",
    "maintenance",
    "investment",
    "upgradeProperty",
    "co2",
    "saveThePlanet",
    "everyone",
    "lowerEnergyBill",
    "youTube",
    "button3",
    "learn",
    "text6",
    "button2",
    "contactUs",
    "columns",
    "footer",
    "section5",
    "brandLogo3",
    "section6",
    "h4",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],
  landingPage: [
    "landingPage",
    "navigationBar",
    "logo",
    "solution2",
    "logo2",
    "headerTxt",
    "taglineTxt",
    "text",
    "btns2"
  ],
  navigationBar: ["navigationBar", "logo", "solution2", "logo2"],
  logo: ["logo"],
  solution2: ["solution2"],
  logo2: ["logo2"],
  headerTxt: ["headerTxt"],
  taglineTxt: ["taglineTxt", "text"],
  text: ["text"],
  btns2: ["btns2"],
  content: [
    "content",
    "about",
    "text2",
    "button",
    "projects",
    "sliderCarousel2",
    "maintenance",
    "investment",
    "upgradeProperty",
    "co2",
    "saveThePlanet",
    "everyone",
    "lowerEnergyBill",
    "youTube",
    "button3",
    "learn",
    "text6",
    "button2",
    "contactUs",
    "columns"
  ],
  about: ["about", "text2", "button"],
  text2: ["text2"],
  button: ["button"],
  projects: [
    "projects",
    "sliderCarousel2",
    "maintenance",
    "investment",
    "upgradeProperty",
    "co2",
    "saveThePlanet",
    "everyone",
    "lowerEnergyBill",
    "youTube",
    "button3"
  ],
  sliderCarousel2: [
    "sliderCarousel2",
    "maintenance",
    "investment",
    "upgradeProperty",
    "co2",
    "saveThePlanet",
    "everyone",
    "lowerEnergyBill"
  ],
  maintenance: ["maintenance"],
  investment: ["investment"],
  upgradeProperty: ["upgradeProperty"],
  co2: ["co2"],
  saveThePlanet: ["saveThePlanet"],
  everyone: ["everyone"],
  lowerEnergyBill: ["lowerEnergyBill"],
  youTube: ["youTube"],
  button3: ["button3"],
  learn: ["learn", "text6", "button2"],
  text6: ["text6"],
  button2: ["button2"],
  contactUs: ["contactUs", "columns"],
  columns: ["columns"],
  footer: [
    "footer",
    "section5",
    "brandLogo3",
    "section6",
    "h4",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],
  section5: [
    "section5",
    "brandLogo3",
    "section6",
    "h4",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],
  brandLogo3: [
    "brandLogo3",
    "section6",
    "h4",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],
  section6: ["section6", "h4", "whereToFindUs3", "connectWithUs4", "getSolar3"],
  h4: ["h4"],
  whereToFindUs3: ["whereToFindUs3"],
  connectWithUs4: ["connectWithUs4"],
  getSolar3: ["getSolar3"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  homePage: "div";
  landingPage: "div";
  navigationBar: typeof NavigationBar;
  logo: "a";
  solution2: "a";
  logo2: "a";
  headerTxt: "div";
  taglineTxt: "div";
  text: "h5";
  btns2: "div";
  content: "div";
  about: "div";
  text2: "div";
  button: "div";
  projects: "div";
  sliderCarousel2: typeof SliderWrapper;
  maintenance: "div";
  investment: "div";
  upgradeProperty: "div";
  co2: "div";
  saveThePlanet: "div";
  everyone: "div";
  lowerEnergyBill: "div";
  youTube: typeof YouTube;
  button3: "div";
  learn: "div";
  text6: "div";
  button2: "div";
  contactUs: "div";
  columns: "div";
  footer: "footer";
  section5: "div";
  brandLogo3: "div";
  section6: "div";
  h4: "h4";
  whereToFindUs3: "div";
  connectWithUs4: "div";
  getSolar3: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLanding__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLanding__VariantsArgs;
    args?: PlasmicLanding__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLanding__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicLanding__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicLanding__ArgProps,
          internalVariantPropNames: PlasmicLanding__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicLanding__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "homePage") {
    func.displayName = "PlasmicLanding";
  } else {
    func.displayName = `PlasmicLanding.${nodeName}`;
  }
  return func;
}

export const PlasmicLanding = Object.assign(
  // Top-level PlasmicLanding renders the root element
  makeNodeComponent("homePage"),
  {
    // Helper components rendering sub-elements
    landingPage: makeNodeComponent("landingPage"),
    navigationBar: makeNodeComponent("navigationBar"),
    logo: makeNodeComponent("logo"),
    solution2: makeNodeComponent("solution2"),
    logo2: makeNodeComponent("logo2"),
    headerTxt: makeNodeComponent("headerTxt"),
    taglineTxt: makeNodeComponent("taglineTxt"),
    text: makeNodeComponent("text"),
    btns2: makeNodeComponent("btns2"),
    content: makeNodeComponent("content"),
    about: makeNodeComponent("about"),
    text2: makeNodeComponent("text2"),
    button: makeNodeComponent("button"),
    projects: makeNodeComponent("projects"),
    sliderCarousel2: makeNodeComponent("sliderCarousel2"),
    maintenance: makeNodeComponent("maintenance"),
    investment: makeNodeComponent("investment"),
    upgradeProperty: makeNodeComponent("upgradeProperty"),
    co2: makeNodeComponent("co2"),
    saveThePlanet: makeNodeComponent("saveThePlanet"),
    everyone: makeNodeComponent("everyone"),
    lowerEnergyBill: makeNodeComponent("lowerEnergyBill"),
    youTube: makeNodeComponent("youTube"),
    button3: makeNodeComponent("button3"),
    learn: makeNodeComponent("learn"),
    text6: makeNodeComponent("text6"),
    button2: makeNodeComponent("button2"),
    contactUs: makeNodeComponent("contactUs"),
    columns: makeNodeComponent("columns"),
    footer: makeNodeComponent("footer"),
    section5: makeNodeComponent("section5"),
    brandLogo3: makeNodeComponent("brandLogo3"),
    section6: makeNodeComponent("section6"),
    h4: makeNodeComponent("h4"),
    whereToFindUs3: makeNodeComponent("whereToFindUs3"),
    connectWithUs4: makeNodeComponent("connectWithUs4"),
    getSolar3: makeNodeComponent("getSolar3"),

    // Metadata about props expected for PlasmicLanding
    internalVariantProps: PlasmicLanding__VariantProps,
    internalArgProps: PlasmicLanding__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicLanding;
/* prettier-ignore-end */
